warning: unused imports: `BasicBlockIdGenerator`, `BasicBlock`, `CompareOp`, `EffectMask`, `MirFunction`, and `ValueIdGenerator`
  --> src/mir/loop_builder.rs:9:21
   |
9  |     MirInstruction, BasicBlock, BasicBlockId, MirFunction, ValueId, 
   |                     ^^^^^^^^^^                ^^^^^^^^^^^
10 |     ConstValue, CompareOp, BasicBlockIdGenerator, ValueIdGenerator, EffectMask
   |                 ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `HashSet`
  --> src/mir/loop_builder.rs:13:33
   |
13 | use std::collections::{HashMap, HashSet};
   |                                 ^^^^^^^

warning: unexpected `cfg` condition value: `llvm`
  --> src/backend/mod.rs:13:7
   |
13 | #[cfg(feature = "llvm")]
   |       ^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `all-examples`, `cli`, `default`, `dynamic-file`, `gui`, `gui-examples`, and `wasm-backend`
   = help: consider adding `llvm` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `llvm`
  --> src/backend/mod.rs:23:7
   |
23 | #[cfg(feature = "llvm")]
   |       ^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `all-examples`, `cli`, `default`, `dynamic-file`, `gui`, `gui-examples`, and `wasm-backend`
   = help: consider adding `llvm` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `MirInstruction`
 --> src/backend/vm_phi.rs:9:41
  |
9 | use crate::mir::{BasicBlockId, ValueId, MirInstruction};
  |                                         ^^^^^^^^^^^^^^

warning: unused import: `super::Usize`
 --> src/bid/types.rs:1:5
  |
1 | use super::Usize;
  |     ^^^^^^^^^^^^

warning: unused import: `std::os::raw::c_char`
 --> src/bid/plugin_api.rs:2:5
  |
2 | use std::os::raw::c_char;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `NyashHostVtable`, `NyashMethodInfo`, and `NyashPluginInfo`
 --> src/bid/plugins/filebox/mod.rs:7:18
  |
7 | use crate::bid::{NyashPluginInfo, NyashMethodInfo, NyashHostVtable};
  |                  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unused imports: `SeekFrom` and `Seek`
  --> src/bid/plugins/filebox/mod.rs:10:28
   |
10 | use std::io::{Read, Write, Seek, SeekFrom};
   |                            ^^^^  ^^^^^^^^

warning: unused imports: `c_char` and `c_void`
  --> src/bid/plugins/filebox/mod.rs:11:20
   |
11 | use std::os::raw::{c_char, c_void};
   |                    ^^^^^^  ^^^^^^

warning: unused imports: `CStr` and `CString`
  --> src/bid/plugins/filebox/mod.rs:13:16
   |
13 | use std::ffi::{CStr, CString};
   |                ^^^^  ^^^^^^^

warning: unused import: `std::ffi::c_void`
 --> src/bid/loader.rs:3:5
  |
3 | use std::ffi::c_void;
  |     ^^^^^^^^^^^^^^^^

warning: unused imports: `TlvDecoder` and `TlvEncoder`
 --> src/bid/generic_plugin_box.rs:2:23
  |
2 | use crate::bid::tlv::{TlvEncoder, TlvDecoder};
  |                       ^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `crate::bid::types::BidTag`
 --> src/bid/generic_plugin_box.rs:3:5
  |
3 | use crate::bid::types::BidTag;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `BoxBase`
 --> src/runtime/plugin_loader_v2.rs:7:43
  |
7 | use crate::box_trait::{NyashBox, BoxCore, BoxBase, StringBox};
  |                                           ^^^^^^^

warning: unused import: `std::ffi::c_void`
  --> src/runtime/plugin_loader_v2.rs:11:5
   |
11 | use std::ffi::c_void;
   |     ^^^^^^^^^^^^^^^^

warning: unused variable: `registry`
  --> src/box_factory/plugin.rs:53:13
   |
53 |         let registry = get_global_registry();
   |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_registry`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `args`
   --> src/instance_v2.rs:147:28
    |
147 |     pub fn init(&mut self, args: &[Box<dyn NyashBox>]) -> Result<(), String> {
    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_args`

warning: unused variable: `nyash_value`
   --> src/instance_v2.rs:289:21
    |
289 |         if let Some(nyash_value) = self.fields_ng.lock().unwrap().get(field_name) {
    |                     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_nyash_value`

warning: unused variable: `block_id`
   --> src/mir/loop_builder.rs:246:39
    |
246 |     fn mark_block_unsealed(&mut self, block_id: BasicBlockId) -> Result<(), String> {
    |                                       ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_block_id`

warning: unused variable: `block_id`
   --> src/mir/loop_builder.rs:273:49
    |
273 |     fn get_variable_at_block(&self, name: &str, block_id: BasicBlockId) -> Option<ValueId> {
    |                                                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_block_id`

warning: unused variable: `dst`
  --> src/backend/vm_phi.rs:48:9
   |
48 |         dst: ValueId,
   |         ^^^ help: if this is intentional, prefix it with an underscore: `_dst`

warning: unused variable: `f`
   --> src/bid/plugin_api.rs:167:36
    |
167 |     pub fn with_alloc<F>(mut self, f: F) -> Self
    |                                    ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: variable does not need to be mutable
   --> src/bid/plugin_api.rs:167:26
    |
167 |     pub fn with_alloc<F>(mut self, f: F) -> Self
    |                          ----^^^^
    |                          |
    |                          help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `f`
   --> src/bid/plugin_api.rs:176:35
    |
176 |     pub fn with_free<F>(mut self, f: F) -> Self
    |                                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: variable does not need to be mutable
   --> src/bid/plugin_api.rs:176:25
    |
176 |     pub fn with_free<F>(mut self, f: F) -> Self
    |                         ----^^^^
    |                         |
    |                         help: remove this `mut`

warning: unused variable: `f`
   --> src/bid/plugin_api.rs:183:34
    |
183 |     pub fn with_log<F>(mut self, f: F) -> Self
    |                                  ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: variable does not need to be mutable
   --> src/bid/plugin_api.rs:183:24
    |
183 |     pub fn with_log<F>(mut self, f: F) -> Self
    |                        ----^^^^
    |                        |
    |                        help: remove this `mut`

warning: unused variable: `args`
   --> src/runtime/plugin_loader_v2.rs:236:46
    |
236 |     pub fn create_box(&self, box_type: &str, args: &[Box<dyn NyashBox>]) -> BidResult<Box<dyn NyashBox>> {
    |                                              ^^^^ help: if this is intentional, prefix it with an underscore: `_args`

warning: type `FileMode` is more private than the item `FileBoxRegistry::open`
  --> src/bid/plugins/filebox/mod.rs:44:5
   |
44 |     pub fn open(&mut self, path: &str, mode: FileMode) -> Result<BidHandle, std::io::Error> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method `FileBoxRegistry::open` is reachable at visibility `pub`
   |
note: but type `FileMode` is only usable at visibility `pub(self)`
  --> src/bid/plugins/filebox/mod.rs:29:1
   |
29 | enum FileMode {
   | ^^^^^^^^^^^^^
   = note: `#[warn(private_interfaces)]` on by default

warning: field `block_var_maps` is never read
  --> src/mir/loop_builder.rs:35:5
   |
27 | pub struct LoopBuilder<'a> {
   |            ----------- field in this struct
...
35 |     block_var_maps: HashMap<BasicBlockId, HashMap<String, ValueId>>,
   |     ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `type_name_holder` and `method_holders` are never read
   --> src/bid/metadata.rs:148:5
    |
143 | pub struct PluginMetadata {
    |            -------------- fields in this struct
...
148 |     type_name_holder: Option<CString>,
    |     ^^^^^^^^^^^^^^^^
149 |     method_holders: Vec<(NyashMethodInfo, CString)>,
    |     ^^^^^^^^^^^^^^

warning: fields `path` and `mode` are never read
  --> src/bid/plugins/filebox/mod.rs:24:5
   |
22 | struct FileBoxState {
   |        ------------ fields in this struct
23 |     file: File,
24 |     path: String,
   |     ^^^^
25 |     mode: FileMode,
   |     ^^^^

warning: fields `box_types` and `init_fn` are never read
  --> src/runtime/plugin_loader_v2.rs:20:5
   |
15 | pub struct LoadedPluginV2 {
   |            -------------- fields in this struct
...
20 |     box_types: Vec<String>,
   |     ^^^^^^^^^
...
23 |     init_fn: Option<unsafe extern "C" fn() -> i32>,
   |     ^^^^^^^

warning: unused `Result` that must be used
  --> src/mir/loop_builder.rs:62:9
   |
62 |         self.add_predecessor(header_id, preheader_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
62 |         let _ = self.add_predecessor(header_id, preheader_id);
   |         +++++++

warning: unused `Result` that must be used
  --> src/mir/loop_builder.rs:66:9
   |
66 |         self.mark_block_unsealed(header_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
66 |         let _ = self.mark_block_unsealed(header_id);
   |         +++++++

warning: unused `Result` that must be used
  --> src/mir/loop_builder.rs:78:9
   |
78 |         self.add_predecessor(body_id, header_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
78 |         let _ = self.add_predecessor(body_id, header_id);
   |         +++++++

warning: unused `Result` that must be used
  --> src/mir/loop_builder.rs:79:9
   |
79 |         self.add_predecessor(after_loop_id, header_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
79 |         let _ = self.add_predecessor(after_loop_id, header_id);
   |         +++++++

warning: unused `Result` that must be used
  --> src/mir/loop_builder.rs:93:9
   |
93 |         self.add_predecessor(header_id, latch_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
93 |         let _ = self.add_predecessor(header_id, latch_id);
   |         +++++++

warning: creating a shared reference to mutable static
   --> src/bid/plugins/filebox/mod.rs:102:12
    |
102 |         if FILEBOX_REGISTRY.is_none() {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>
    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives
    = note: `#[warn(static_mut_refs)]` on by default

warning: creating a shared reference to mutable static
   --> src/bid/plugins/filebox/mod.rs:105:9
    |
105 |         FILEBOX_REGISTRY.as_ref().unwrap().clone()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>
    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives

warning: unused imports: `BoolBox`, `IntegerBox`, and `StringBox`
   --> src/ast.rs:885:28
    |
885 |     use crate::box_trait::{StringBox, IntegerBox, BoolBox};
    |                            ^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Mutex`
   --> src/instance_v2.rs:387:26
    |
387 |     use std::sync::{Arc, Mutex};
    |                          ^^^^^

warning: unused imports: `BasicBlockIdGenerator`, `BasicBlock`, `CompareOp`, `EffectMask`, `MirFunction`, and `ValueIdGenerator`
  --> src/mir/loop_builder.rs:9:21
   |
9  |     MirInstruction, BasicBlock, BasicBlockId, MirFunction, ValueId, 
   |                     ^^^^^^^^^^                ^^^^^^^^^^^
10 |     ConstValue, CompareOp, BasicBlockIdGenerator, ValueIdGenerator, EffectMask
   |                 ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `BasicBlock`
   --> src/mir/verification.rs:311:75
    |
311 |     use crate::mir::{MirFunction, FunctionSignature, MirType, EffectMask, BasicBlock};
    |                                                                           ^^^^^^^^^^

warning: unused imports: `BasicBlock`, `EffectMask`, `FunctionSignature`, `MirFunction`, `MirModule`, and `MirType`
   --> src/backend/vm.rs:860:22
    |
860 |     use crate::mir::{MirModule, MirFunction, FunctionSignature, MirType, EffectMask, BasicBlock};
    |                      ^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^

warning: unused imports: `BidHandle` and `BoxTypeId`
  --> src/runtime/tests.rs:10:22
   |
10 |     use crate::bid::{BidHandle, BoxTypeId};
   |                      ^^^^^^^^^  ^^^^^^^^^

warning: variable does not need to be mutable
   --> src/mir/basic_block.rs:314:13
    |
314 |         let mut bb = BasicBlock::new(bb_id);
    |             ----^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `child`
   --> src/mir/ownership_verifier_simple.rs:313:13
    |
313 |         let child = value_gen.next();
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_child`

warning: variable does not need to be mutable
   --> src/bid/plugin_api.rs:167:26
    |
167 |     pub fn with_alloc<F>(mut self, f: F) -> Self
    |                          ----^^^^
    |                          |
    |                          help: remove this `mut`

warning: variable does not need to be mutable
  --> src/tests/box_tests.rs:11:13
   |
11 |         let mut array = ArrayBox::new();
   |             ----^^^^^
   |             |
   |             help: remove this `mut`

warning: variable does not need to be mutable
  --> src/tests/box_tests.rs:90:13
   |
90 |         let mut stream = NyashStreamBox::from_data(vec![72, 101, 108, 108, 111]); // "Hello"
   |             ----^^^^^^
   |             |
   |             help: remove this `mut`

warning: `nyash-rust` (lib) generated 41 warnings (run `cargo fix --lib -p nyash-rust` to apply 17 suggestions)
warning: `nyash-rust` (lib test) generated 50 warnings (39 duplicates) (run `cargo fix --lib -p nyash-rust --tests` to apply 10 suggestions)
warning: unused import: `std::collections::HashMap`
 --> tests/integration_tests.rs:9:5
  |
9 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: function `execute_nyash_code` is never used
  --> tests/integration_tests.rs:12:4
   |
12 | fn execute_nyash_code(code: &str) -> Result<String, String> {
   |    ^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: unexpected `cfg` condition value: `llvm`
  --> src/runner.rs:22:7
   |
22 | #[cfg(feature = "llvm")]
   |       ^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `all-examples`, `cli`, `default`, `dynamic-file`, `gui`, `gui-examples`, and `wasm-backend`
   = help: consider adding `llvm` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `llvm`
   --> src/runner.rs:503:15
    |
503 |         #[cfg(feature = "llvm")]
    |               ^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `all-examples`, `cli`, `default`, `dynamic-file`, `gui`, `gui-examples`, and `wasm-backend`
    = help: consider adding `llvm` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `llvm`
   --> src/runner.rs:526:19
    |
526 |         #[cfg(not(feature = "llvm"))]
    |                   ^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `all-examples`, `cli`, `default`, `dynamic-file`, `gui`, `gui-examples`, and `wasm-backend`
    = help: consider adding `llvm` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `BoxCore`
  --> src/main.rs:71:32
   |
71 |     use box_trait::{StringBox, BoxCore, NyashBox};
   |                                ^^^^^^^

warning: variable does not need to be mutable
   --> src/runner.rs:286:17
    |
286 |             let mut printer = if self.config.mir_verbose {
    |                 ----^^^^^^^
    |                 |
    |                 help: remove this `mut`

warning: type `FileMode` is more private than the item `bid::plugins::filebox::FileBoxRegistry::open`
  --> src/bid/plugins/filebox/mod.rs:44:5
   |
44 |     pub fn open(&mut self, path: &str, mode: FileMode) -> Result<BidHandle, std::io::Error> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method `bid::plugins::filebox::FileBoxRegistry::open` is reachable at visibility `pub`
   |
note: but type `FileMode` is only usable at visibility `pub(self)`
  --> src/bid/plugins/filebox/mod.rs:29:1
   |
29 | enum FileMode {
   | ^^^^^^^^^^^^^
   = note: `#[warn(private_interfaces)]` on by default

warning: unused `std::result::Result` that must be used
  --> src/mir/loop_builder.rs:62:9
   |
62 |         self.add_predecessor(header_id, preheader_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
62 |         let _ = self.add_predecessor(header_id, preheader_id);
   |         +++++++

warning: unused `std::result::Result` that must be used
  --> src/mir/loop_builder.rs:66:9
   |
66 |         self.mark_block_unsealed(header_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
66 |         let _ = self.mark_block_unsealed(header_id);
   |         +++++++

warning: unused `std::result::Result` that must be used
  --> src/mir/loop_builder.rs:78:9
   |
78 |         self.add_predecessor(body_id, header_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
78 |         let _ = self.add_predecessor(body_id, header_id);
   |         +++++++

warning: unused `std::result::Result` that must be used
  --> src/mir/loop_builder.rs:79:9
   |
79 |         self.add_predecessor(after_loop_id, header_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
79 |         let _ = self.add_predecessor(after_loop_id, header_id);
   |         +++++++

warning: unused `std::result::Result` that must be used
  --> src/mir/loop_builder.rs:93:9
   |
93 |         self.add_predecessor(header_id, latch_id);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
93 |         let _ = self.add_predecessor(header_id, latch_id);
   |         +++++++

warning: unused import: `VMValue`
  --> tests/mir_phase6_vm_ref_ops.rs:11:31
   |
11 | use nyash_rust::backend::{VM, VMValue};
   |                               ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `NyashBox`
  --> tests/mir_phase6_vm_ref_ops.rs:12:41
   |
12 | use nyash_rust::box_trait::{IntegerBox, NyashBox};
   |                                         ^^^^^^^^

warning: unused variable: `vm`
   --> tests/mir_phase6_vm_ref_ops.rs:139:13
    |
139 |     let mut vm = VM::new();
    |             ^^ help: if this is intentional, prefix it with an underscore: `_vm`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: variable does not need to be mutable
   --> tests/mir_phase6_vm_ref_ops.rs:139:9
    |
139 |     let mut vm = VM::new();
    |         ----^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/runner.rs:286:17
    |
286 |             let mut printer = if self.config.mir_verbose {
    |                 ----^^^^^^^
    |                 |
    |                 help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unexpected `cfg` condition value: `mir-v2`
 --> tests/mir_phase8_5_hierarchical_25_instructions.rs:7:8
  |
7 | #![cfg(feature = "mir-v2")]
  |        ^^^^^^^^^^^^^^^^^^
  |
  = note: expected values for `feature` are: `all-examples`, `cli`, `default`, `dynamic-file`, `gui`, `gui-examples`, and `wasm-backend`
  = help: consider adding `mir-v2` as a feature in `Cargo.toml`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: struct `NyashNotepad` is never constructed
  --> examples/simple_notepad_win.rs:58:8
   |
58 | struct NyashNotepad {
   |        ^^^^^^^^^^^^
   |
   = note: `NyashNotepad` has a derived impl for the trait `Default`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: associated function `new` is never used
  --> examples/simple_notepad_win.rs:64:8
   |
63 | impl NyashNotepad {
   | ----------------- associated function in this implementation
64 |     fn new() -> Self {
   |        ^^^

warning: `nyash-rust` (test "integration_tests") generated 2 warnings (run `cargo fix --test "integration_tests"` to apply 1 suggestion)
warning: `nyash-rust` (bin "nyash" test) generated 53 warnings (42 duplicates) (run `cargo fix --bin "nyash" --tests` to apply 2 suggestions)
warning: `nyash-rust` (test "mir_phase6_vm_ref_ops") generated 4 warnings (run `cargo fix --test "mir_phase6_vm_ref_ops"` to apply 2 suggestions)
warning: `nyash-rust` (bin "nyash") generated 45 warnings (44 duplicates) (run `cargo fix --bin "nyash"` to apply 1 suggestion)
warning: `nyash-rust` (test "mir_phase8_5_hierarchical_25_instructions") generated 1 warning
warning: `nyash-rust` (example "simple_notepad_win") generated 2 warnings
    Finished `test` profile [unoptimized + debuginfo] target(s) in 2.29s
     Running unittests src/lib.rs (target/debug/deps/nyash_rust-027bd4c76143e77b)

running 156 tests
test bid::metadata::tests::test_host_vtable ... ok
test box_arithmetic::tests::test_add_box_integers ... ok
test box_arithmetic::tests::test_modulo_box ... ok
test box_arithmetic::tests::test_modulo_chip8_pattern ... ok
🚀 Running benchmark: bench_light
test box_arithmetic::tests::test_compare_box ... ok
test bid::types::tests::test_handle_packing ... ok
test box_operators::tests::test_boolean_arithmetic ... ok
test box_arithmetic::tests::test_multiply_box ... ok
test bid::tlv::tests::test_encode_decode_handle ... ok
test bid::tlv::tests::test_encode_decode_primitives ... ok
test backend::vm::tests::test_binary_operations ... ok
test bid::metadata::tests::test_plugin_metadata_creation ... ok
test box_operators::tests::test_integer_addition ... ok
test box_arithmetic::tests::test_subtract_box ... ok
test ast::tests::test_ast_node_creation ... ok
test ast::tests::test_binary_operator ... ok
test ast::tests::test_method_call ... ok
test box_arithmetic::tests::test_add_box_strings ... ok
test box_operators::tests::test_string_concatenation ... ok
test bid::plugin_api::tests::test_plugin_handle ... ok
test backend::vm_phi::tests::test_phi_selection ... ok
test box_factory::tests::test_registry_creation ... ok
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: test box_arithmetic::tests::test_divide_box ... okProgram

🔍 DEBUG: Executing program with 1test box_operators::tests::test_string_repetition ... ok statements
🔍 DEBUG: Executing statement 
1 of test box_operators::tests::test_can_add_with ... ok1: 
BoxDeclaration
test box_operators::tests::test_dynamic_addition ... ok
test bid::types::tests::test_type_tags ... ok
test box_arithmetic::tests::test_modulo_by_zero ... ok
test ast::tests::test_binary_operation ... ok
test box_trait::tests::test_add_box_integers ... ok
test box_arithmetic::tests::test_divide_by_zero ... ok
test bid::types::tests::test_arg_type_mapping ... ok
test backend::vm::tests::test_basic_vm_execution ... ok
🔍 execute_statement called with node type: "test box_trait::tests::test_add_box_strings ... okBoxDeclaration"

test box_trait::tests::test_bool_box_creation ... 🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'okMain' definition registered in statics namespace

🔍 DEBUG: Statement 1Instance: StringBox
 completed
Instance: MyBox
🔍 DEBUG: Starting interpreter execution...
test box_trait::tests::test_box_equality ... 🔍 DEBUG: execute_node called with node type: Programok

test box_trait::tests::test_box_ids_unique ... ok🔍 DEBUG: Executing program with 1
 statements
test ast::tests::test_complex_ast ... ok🔍 DEBUG: Executing statement 1
 of 1test box_trait::tests::test_integer_box_creation ... ok: Assignment

test box_trait::tests::test_string_box_creation ... ok🔍 execute_statement called with node type: "
Assignment"test bid::bridge::tests::test_string_box_bid_conversion ... ok

🔍 About to call execute_assignment...
test bid::bridge::tests::test_box_registry ... ok🔍 execute_assignment called, evaluating value expression...

🔍 execute_new called for class: IntegerBoxtest bid::bridge::tests::test_integer_box_bid_conversion ... ok, with 1
 arguments
test box_trait::tests::test_void_box ... ok🔍 Trying unified registry for class: IntegerBox

test bid::bridge::tests::test_future_box_bid_conversion ... ok🌍 statics namespace already exists - skipping creation

🔍 DEBUG: Starting interpreter execution...
test boxes::null_box::tests::test_get_or_default ... ok🔍 DEBUG: execute_node called with node type: Program

test boxes::null_box::tests::test_null_check ... ok🔍 DEBUG: Executing program with 2
 statements
test boxes::null_box::tests::test_null_creation ... ok🔍 DEBUG: Executing statement 1
 of 2test boxes::null_box::tests::test_null_equality ... ok: Assignment

test cli::tests::test_default_config ... ok🔍 execute_statement called with node type: "
Assignment"test cli::tests::test_parse_debug_fuel ... ok

🔍 About to call execute_assignment...
test environment::tests::test_error_handling ... ok🔍 execute_assignment called, evaluating value expression...

🔍 execute_new called for class: BoolBoxtest environment::tests::test_global_environment ... ok, with 1
 arguments
test environment::tests::test_nested_scopes ... ok🔍 Trying unified registry for class: BoolBox

test environment::tests::test_python_compat ... ok🔍 DEBUG: Starting interpreter execution...

🔍 DEBUG: execute_node called with node type: Programtest environment::tests::test_scope_info ... ok

🔍 DEBUG: Executing program with 2test environment::tests::test_variable_setting ... ok statements

🔍 DEBUG: Executing statement 1test environment::tests::test_variable_shadowing ... ok of 2
: Assignmenttest finalization::tests::test_finalization_tracking ... ok

🔍 execute_statement called with node type: "test instance_v2::tests::test_field_operations ... okAssignment"

test instance_v2::tests::test_from_any_box_creation ... ok🔍 About to call execute_assignment...

🔍 execute_assignment called, evaluating value expression...
test instance_v2::tests::test_from_declaration_creation ... ok🔍 execute_new called for class: IntegerBox
, with 1test instance_v2::tests::test_unified_approach ... ok arguments

🔍 Trying unified registry for class: IntegerBoxtest bid::plugins::filebox::tests::test_filebox_plugin ... ok

🔥 Static box 'Maintest config::nyash_toml_v2::tests::test_parse_v2_config ... ok' instance registered in statics namespace

🔍 DEBUG: Starting interpreter execution...
test mir::basic_block::tests::test_basic_block_creation ... ok🔍 DEBUG: execute_node called with node type: Program

test mir::basic_block::tests::test_basic_block_id_generator ... ok🔍 DEBUG: Executing program with 4
 statements
test mir::basic_block::tests::test_branch_successors ... ok🔍 DEBUG: Executing statement 1
 of 4test mir::basic_block::tests::test_instruction_addition ... ok: BoxDeclaration

test mir::basic_block::tests::test_phi_instruction_ordering ... ok🔍 execute_statement called with node type: "
BoxDeclaration"test mir::basic_block::tests::test_terminator_addition ... ok

🏭 Unified registry created: IntegerBoxtest mir::basic_block::tests::test_value_tracking ... ok

🔍 execute_statement called with node type: "test mir::builder::tests::test_binary_op_building ... okMethodCall"

test mir::builder::tests::test_if_statement_building ... ok🔍 execute_new called for class: IntegerBox
, with 1test mir::builder::tests::test_literal_building ... ok arguments

🔍 Trying unified registry for class: IntegerBoxtest mir::effect::tests::test_effect_combination ... ok

🔍 DEBUG: Statement 1test mir::effect::tests::test_effect_display ... ok completed

🔍 DEBUG: Executing statement 2test mir::effect::tests::test_effect_mask_creation ... ok of 4
: Assignmenttest mir::effect::tests::test_effect_names ... ok

🔍 execute_statement called with node type: "test mir::effect::tests::test_effect_union ... okAssignment"

test mir::effect::tests::test_parallel_safety ... ok🔍 About to call execute_assignment...

🔍 execute_assignment called, evaluating value expression...
test mir::function::tests::test_function_creation ... ok🔍 execute_new called for class: TestBox
, with 0test mir::function::tests::test_function_stats ... ok arguments

🔍 Trying unified registry for class: TestBoxtest mir::function::tests::test_module_creation ... ok

🔍 DEBUG: resolve_variable: name='statics', local_vars=[]test mir::function::tests::test_value_id_generation ... ok

🔍 DEBUG: Checking GlobalBox for 'staticstest mir::instruction::tests::test_barrier_instructions ... ok'...

🔍 DEBUG: Found 'staticstest mir::instruction::tests::test_binop_instruction ... ok' in GlobalBox

🏭 Unified registry created: BoolBoxtest mir::instruction::tests::test_call_instruction ... ok

✅ FIELD ACCESS: Returning shared reference id=143test mir::instruction::tests::test_const_instruction ... ok

🔍 execute_assignment: value expression evaluated successfully
test mir::instruction::tests::test_extern_call_instruction ... ok🏭 Unified registry created: IntegerBox

test mir::instruction::tests::test_ref_get_instruction ... ok🔍 execute_statement called with node type: "
Local"test mir::instruction::tests::test_ref_new_instruction ... ok

🔍 DEBUG: Statement 1test mir::instruction::tests::test_ref_set_instruction ... ok completed

🔍 DEBUG: Executing statement 2test mir::instruction::tests::test_weak_load_instruction ... ok of 2
: Iftest mir::instruction::tests::test_weak_new_instruction ... ok

🔍 execute_statement called with node type: "test mir::instruction_v2::tests::test_effect_categories ... okIf"

test mir::instruction_v2::tests::test_instruction_count ... ok🔍 execute_statement called with node type: "
Assignment"test mir::instruction_v2::tests::test_ownership_operations ... ok

🔍 About to call execute_assignment...
test mir::ownership_verifier_simple::tests::test_basic_ref_set ... ok🔍 execute_assignment called, evaluating value expression...

🔍 execute_new called for class: IntegerBoxtest mir::ownership_verifier_simple::tests::test_ownership_forest_basic ... ok, with 1
 arguments
test mir::ownership_verifier_simple::tests::test_weak_reference_tracking ... ok🔍 Trying unified registry for class: IntegerBox

test mir::printer::tests::test_empty_module_printing ... ok🏭 Unified registry created: IntegerBox

test mir::printer::tests::test_function_printing ... ok🔧 execute_binary_op: op=Add
, left=IntegerBoxtest mir::printer::tests::test_verbose_printing ... ok, right=IntegerBox

test mir::tests::test_basic_mir_compilation ... ok🔍 try_add_operation: left=IntegerBox
, right=IntegerBoxtest mir::tests::test_loop_compilation ... ok

🔍 After unwrap: left=IntegerBoxtest mir::tests::test_mir_dump ... ok, right=IntegerBox

test mir::tests::test_throw_compilation ... ok🔍 IntegerBox + IntegerBox detected

🔍 execute_assignment: value expression evaluated successfully
test mir::tests::test_try_catch_compilation ... ok🔍 DEBUG: resolve_variable: name='x', local_vars=[]

test mir::value_id::tests::test_local_id_creation ... ok🔍 DEBUG: Checking GlobalBox for 'x
'...
test mir::value_id::tests::test_local_id_generator ... ok🔍 DEBUG: Found 'x
' in GlobalBox
test mir::value_id::tests::test_value_id_creation ... ok🔍 execute_statement called with node type: "
Assignment"test mir::value_id::tests::test_value_id_generator ... ok

🔍 About to call execute_assignment...
test mir::value_id::tests::test_value_id_ordering ... ok🔍 execute_assignment called, evaluating value expression...

🔍 execute_new called for class: StringBoxtest mir::verification::tests::test_undefined_value_detection ... ok, with 1
 arguments
test mir::verification::tests::test_valid_function_verification ... ok🔍 Trying unified registry for class: StringBox

test runtime::box_registry::tests::test_builtin_registration ... ok🔍 execute_assignment: value expression evaluated successfully

🔍 DEBUG: Statement 1test runtime::box_registry::tests::test_plugin_override ... ok completed

🏭 Unified registry created: TestBoxtest runtime::plugin_config::tests::test_parse_empty_config ... ok

🔍 DEBUG: Statement 1test runtime::plugin_config::tests::test_parse_simple_config ... ok completed

🔍 DEBUG: Executing statement 2test runtime::plugin_config::tests::test_parse_with_comments ... ok of 2
: Printtest runtime::tests::tests::test_box_registry_builtin ... ok

🔍 execute_statement called with node type: "test runtime::tests::tests::test_box_registry_plugin_override ... okPrint"

test runtime::tests::tests::test_multiple_plugin_types ... ok🏭 Unified registry created: IntegerBox

test runtime::tests::tests::test_plugin_config_parsing ... ok🔍 DEBUG: Interpreter execution completed

test runtime::tests::tests::test_transparent_box_switching ... 🔍 execute_assignment: value expression evaluated successfully
ok
🔍 DEBUG: resolve_variable: name='x', local_vars=[]test tests::box_tests::tests::test_array_box_nyash_trait ... ok

test tests::box_tests::tests::test_box_id_uniqueness ... 🔍 DEBUG: Checking GlobalBox for 'xok
'...
test tests::box_tests::tests::test_buffer_box_nyash_trait ... ok🔍 DEBUG: Found 'x
test tests::box_tests::tests::test_future_box_nyash_trait ... ' in GlobalBox
ok🔍 DEBUG: resolve_variable: name='result', local_vars=[]

test tests::box_tests::tests::test_result_box_nyash_trait ... 🔍 DEBUG: Checking GlobalBox for 'resultok'...

🔍 DEBUG: Found 'resulttest tests::box_tests::tests::test_stream_box_nyash_trait ... ' in GlobalBox
ok🏭 Unified registry created: StringBox

test tokenizer::tests::test_comments ... 🔍 execute_assignment: value expression evaluated successfully
ok🔍 execute_assignment: value expression evaluated successfully

🔍 DEBUG: Statement 2test tests::box_tests::tests::test_json_box_nyash_trait ...  completed
ok🔍 DEBUG: Executing statement 3
 of 4test tokenizer::tests::test_complex_code ... : Assignmentok

🔍 execute_statement called with node type: "test tokenizer::tests::test_error_handling ... Assignment"ok

🔍 About to call execute_assignment...
test tokenizer::tests::test_identifier ... 🔍 execute_assignment called, evaluating value expression...
ok🔍 execute_new called for class: StringBox
, with 1test tokenizer::tests::test_line_numbers ...  arguments
ok🔍 Trying unified registry for class: StringBox

test tokenizer::tests::test_number_literal ... 🔍 DEBUG: Statement 2ok completed

🔍 execute_statement called with node type: "test tokenizer::tests::test_operators ... Assignment"ok

🔍 About to call execute_assignment...
test tokenizer::tests::test_simple_tokens ... 🔍 execute_assignment called, evaluating value expression...
ok🔍 execute_new called for class: IntegerBox
, with 1test tokenizer::tests::test_string_literal ...  arguments
ok🔍 Trying unified registry for class: IntegerBox

test value::tests::test_basic_creation ... 🏭 Unified registry created: StringBoxok

🔍 DEBUG: Interpreter execution completed
42
🔍 execute_assignment: value expression evaluated successfully
test value::tests::test_cross_type_equality ... ok🏭 Unified registry created: IntegerBox

test value::tests::test_object_creation ... ok🔍 execute_assignment: value expression evaluated successfully

🔍 DEBUG: Statement 2test value::tests::test_type_conversion ... ok completed

🔍 DEBUG: resolve_variable: name='obj', local_vars=[]test value::tests::test_type_names ... ok

🔍 DEBUG: Checking GlobalBox for 'objtest value::tests::test_weak_reference_basic ... ok'...

test value::tests::test_weak_reference_drop ... 🔍 DEBUG: Found 'objok
' in GlobalBox
test value::tests::test_weak_reference_equality ... ok🔍 DEBUG: Interpreter execution completed

🔍 DEBUG: resolve_variable: name='y', local_vars=[]test value::tests::test_weak_reference_string_representation ... ok

🔍 DEBUG: Checking GlobalBox for 'ytest interpreter::core::tests::test_arithmetic ... ok'...

🔍 DEBUG: Found 'ytest interpreter::core::tests::test_simple_execution ... ok' in GlobalBox

🔍 execute_statement called with node type: "test interpreter::core::tests::test_if_statement ... Assignment"ok

🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='a', local_vars=["a", "c", "b", "me", "result"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=204
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=184
🔍 DEBUG: resolve_variable: name='b', local_vars=["a", "c", "b", "me", "result"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=220
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
✅ FIELD ACCESS: Returning shared reference id=217
🔍 DEBUG: resolve_variable: name='result', local_vars=["a", "c", "b", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=229
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='c', local_vars=["a", "c", "b", "me", "result"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=226
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: resolve_variable: name='result', local_vars=["a", "c", "b", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=233
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='a', local_vars=["a", "c", "b", "me", "result"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=204
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 DEBUG: resolve_variable: name='result', local_vars=["a", "c", "b", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=235
🔍 DEBUG: resolve_variable: name='result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result'...
🔍 DEBUG: Found 'result' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["a", "c", "b", "me", "result"]test interpreter::core::tests::test_box_instance_creation ... ok
🔍 DEBUG: Found '
b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=220
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result', local_vars=["a", "c", "b", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=238
88
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result', local_vars=["a", "c", "b", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=238
🔍 DEBUG: Interpreter execution completed
  📊 Interpreter: First run completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=247
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=256
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=260
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=266
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=264
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=268
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=256
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=270
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=260
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=272
88
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "a", "c", "result", "b"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=272
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=281
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=290
🔍 DEBUG: resolve_variable: name='b', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=294
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=300
🔍 DEBUG: resolve_variable: name='c', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=298
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=302
🔍 DEBUG: resolve_variable: name='a', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=290
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=304
🔍 DEBUG: resolve_variable: name='b', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=294
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=306
88
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "me", "result", "a", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=306
🔍 DEBUG: Interpreter execution completed
88
  🏎️ VM: First run completed
88
88
🚀 Running benchmark: bench_medium
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=318
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔗 DEBUG: Variable 'sum' set to 0 - simulating object drop
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=320
🔗 DEBUG: Old value being dropped: void
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=331
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=326
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=340
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=331
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=347
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=342
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=356
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=347
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=363
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=358
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=372
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=363
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=379
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=374
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=388
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=379
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=395
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=390
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=404
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=395
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=411
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=406
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=420
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=411
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=427
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=422
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=436
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=427
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=443
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=438
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=452
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=443
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=459
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=454
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=468
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=459
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=475
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=470
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=484
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=486
140
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=486
🔍 DEBUG: Interpreter execution completed
  📊 Interpreter: First run completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=495
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔗 DEBUG: Variable 'sum' set to 0 - simulating object drop
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=497
🔗 DEBUG: Old value being dropped: void
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=508
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=503
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=517
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=508
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=524
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=519
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=533
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=524
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=540
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=535
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=549
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=540
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=556
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=551
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=565
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=556
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=572
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=567
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=581
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=572
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=588
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=583
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=597
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=588
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=604
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=599
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=613
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=604
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=620
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=615
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=629
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=620
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=636
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=631
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=645
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=636
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=652
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=647
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=661
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=663
140
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "i", "me", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=663
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=672
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔗 DEBUG: Variable 'sum' set to 0 - simulating object drop
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=674
🔗 DEBUG: Old value being dropped: void
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=685
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=680
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=694
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=685
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=701
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=696
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=710
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=701
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=717
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=712
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=726
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=717
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=733
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=728
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=742
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=733
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=749
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=744
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=758
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=749
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=765
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=760
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=774
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=765
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=781
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=776
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=790
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=781
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=797
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=792
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=806
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=797
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=813
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=808
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=822
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=813
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=829
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=824
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=838
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=840
140
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "sum", "temp"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=840
🔍 DEBUG: Interpreter execution completed
140
  🏎️ VM: First run completed
140
140
🚀 Running benchmark: bench_heavy
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=852
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=873
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=877
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=881
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=885
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=889
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=893
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=897
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=901
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=905
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=909
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=873
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=915
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=920
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=877
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=881
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=924
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=873
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=877
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=881
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=928
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=915
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=920
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=931
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=873
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=877
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=881
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=935
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=885
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=889
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=893
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=939
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=897
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=901
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=905
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=943
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=909
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=873
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=877
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=947
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=881
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=885
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=889
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=951
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=893
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=897
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=901
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=955
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=905
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=909
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=873
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=959
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=877
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=881
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=885
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=963
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=889
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=893
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=897
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=967
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=901
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=905
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=909
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=971
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=873
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=877
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=881
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=975
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=885
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=889
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=893
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=979
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=897
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=901
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=905
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=983
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=909
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=873
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=877
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=987
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=881
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=885
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=889
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=991
6301391
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "i", "e", "d", "a", "result1", "f", "j", "b", "c", "result5", "result2", "g", "me", "result3", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=991
🔍 DEBUG: Interpreter execution completed
  📊 Interpreter: First run completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=1000
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1021
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1025
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1029
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1033
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1037
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1041
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1045
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1049
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1053
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1057
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1021
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1063
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1068
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1025
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1029
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1072
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1021
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1025
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1029
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1076
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1063
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1068
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1079
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1021
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1025
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1029
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1083
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1033
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1037
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1041
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1087
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1045
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1049
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1053
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1091
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1057
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1021
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1025
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1095
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1029
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1033
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1037
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1099
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1041
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1045
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1049
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1103
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1053
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1057
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1021
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1107
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1025
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1029
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1033
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1111
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1037
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1041
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1045
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1115
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1049
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1053
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1057
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1119
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1021
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1025
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1029
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1123
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1033
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1037
🔍 DEBUG: resolve_variable: name='f', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1041
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1127
🔍 DEBUG: resolve_variable: name='g', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1045
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1049
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='i', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1053
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1131
🔍 DEBUG: resolve_variable: name='j', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1057
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1021
🔍 DEBUG: resolve_variable: name='b', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1025
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1135
🔍 DEBUG: resolve_variable: name='c', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1029
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1033
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1037
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1139
6301391
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["h", "f", "e", "i", "result1", "result3", "j", "b", "result2", "result5", "a", "result4", "me", "g", "d", "c"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1139
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=1148
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1169
🔍 DEBUG: resolve_variable: name='b', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1173
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1177
🔍 DEBUG: resolve_variable: name='d', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1181
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1185
🔍 DEBUG: resolve_variable: name='f', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1189
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='g', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1193
🔍 DEBUG: resolve_variable: name='h', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1197
🔍 DEBUG: resolve_variable: name='i', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1201
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1205
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='a', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1169
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1211
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1216
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1173
🔍 DEBUG: resolve_variable: name='c', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1177
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1220
🔍 DEBUG: resolve_variable: name='a', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1169
🔍 DEBUG: resolve_variable: name='b', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1173
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1177
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1224
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1211
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1216
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1227
🔍 DEBUG: resolve_variable: name='a', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1169
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1173
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='c', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1177
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1231
🔍 DEBUG: resolve_variable: name='d', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1181
🔍 DEBUG: resolve_variable: name='e', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1185
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='f', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1189
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1235
🔍 DEBUG: resolve_variable: name='g', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1193
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1197
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='i', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1201
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1239
🔍 DEBUG: resolve_variable: name='j', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1205
🔍 DEBUG: resolve_variable: name='a', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1169
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='b', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1173
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1243
🔍 DEBUG: resolve_variable: name='c', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1177
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1181
🔍 DEBUG: resolve_variable: name='e', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1185
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1247
🔍 DEBUG: resolve_variable: name='f', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1189
🔍 DEBUG: resolve_variable: name='g', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1193
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='h', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1197
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1251
🔍 DEBUG: resolve_variable: name='i', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1201
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='j', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1205
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1169
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1255
🔍 DEBUG: resolve_variable: name='b', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1173
🔍 DEBUG: resolve_variable: name='c', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1177
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='d', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1181
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1259
🔍 DEBUG: resolve_variable: name='e', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1185
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='f', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1189
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='g', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1193
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1263
🔍 DEBUG: resolve_variable: name='h', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1197
🔍 DEBUG: resolve_variable: name='i', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1201
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1205
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1267
🔍 DEBUG: resolve_variable: name='a', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1169
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1173
🔍 DEBUG: resolve_variable: name='c', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1177
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1271
🔍 DEBUG: resolve_variable: name='d', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1181
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1185
🔍 DEBUG: resolve_variable: name='f', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1189
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1275
🔍 DEBUG: resolve_variable: name='g', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1193
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1197
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='i', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1201
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1279
🔍 DEBUG: resolve_variable: name='j', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1205
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1169
🔍 DEBUG: resolve_variable: name='b', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1173
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1283
🔍 DEBUG: resolve_variable: name='c', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1177
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1181
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1185
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1287
6301391
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result5", "h", "me", "i", "result2", "c", "g", "e", "f", "d", "j", "result4", "result3", "a", "b", "result1"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1287
🔍 DEBUG: Interpreter execution completed
6301391
  🏎️ VM: First run completed
6301391
6301391

📊 Nyash Performance Benchmark Results
=====================================
Iterations per test: 3

🎯 bench_heavy
  Backend       | Avg Time (ms) | Total Time (ms) | Speed Ratio
  --------------|---------------|-----------------|------------
  Interpreter  |     295.162 |         885.5 |   384.70x
  VM           |       0.767 |           2.3 |     1.00x

🎯 bench_medium
  Backend       | Avg Time (ms) | Total Time (ms) | Speed Ratio
  --------------|---------------|-----------------|------------
  Interpreter  |     245.216 |         735.6 |   373.98x
  VM           |       0.656 |           2.0 |     1.00x

🎯 bench_light
  Backend       | Avg Time (ms) | Total Time (ms) | Speed Ratio
  --------------|---------------|-----------------|------------
  Interpreter  |      88.599 |         265.8 |   279.30x
  VM           |       0.317 |           1.0 |     1.00x

💡 Performance Summary:
  📈 Average across all benchmarks:
     Interpreter: 209.66 ms
     VM:          0.58 ms (361.4x faster than interpreter)
     WASM:        NaN ms (NaNx faster than interpreter)
test benchmarks::tests::test_benchmark_light ... ok

test result: ok. 156 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.93s

     Running unittests src/main.rs (target/debug/deps/nyash-272ca05a1be10a69)

running 145 tests
test box_arithmetic::tests::test_compare_box ... ok
test bid::types::tests::test_handle_packing ... ok
test bid::types::tests::test_type_tags ... ok
test bid::metadata::tests::test_host_vtable ... ok
test box_trait::tests::test_add_box_integers ... ok
test box_arithmetic::tests::test_multiply_box ... ok
🚀 Running benchmark: bench_light
test box_arithmetic::tests::test_subtract_box ... ok
test box_arithmetic::tests::test_add_box_integers ... ok
test box_arithmetic::tests::test_modulo_box ... ok
test bid::metadata::tests::test_plugin_metadata_creation ... ok
test bid::tlv::tests::test_encode_decode_primitives ... ok
test bid::tlv::tests::test_encode_decode_handle ... ok
test box_trait::tests::test_integer_box_creation ... ok
test ast::tests::test_binary_operation ... ok
test ast::tests::test_binary_operator ... ok
test ast::tests::test_ast_node_creation ... ok
test box_arithmetic::tests::test_add_box_strings ... ok
test box_factory::tests::test_registry_creation ... ok
test ast::tests::test_method_call ... ok
test box_arithmetic::tests::test_divide_box ... ok
test box_trait::tests::test_string_box_creation ... ok
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: test box_trait::tests::test_box_ids_unique ... okProgram

🔍 DEBUG: Executing program with 1test box_trait::tests::test_box_equality ... ok statements
🔍 DEBUG: Executing statement 
1 of test box_arithmetic::tests::test_modulo_by_zero ... ok1: 
BoxDeclaration
test box_trait::tests::test_add_box_strings ... ok
test box_arithmetic::tests::test_divide_by_zero ... ok
test backend::vm::tests::test_basic_vm_execution ... ok
test box_arithmetic::tests::test_modulo_chip8_pattern ... ok
test box_trait::tests::test_void_box ... ok
Instance: StringBox
Instance: MyBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: test bid::plugin_api::tests::test_plugin_handle ... okProgram

🔍 DEBUG: Executing program with 1test bid::types::tests::test_arg_type_mapping ... ok statements

🔍 DEBUG: Executing statement 1test boxes::null_box::tests::test_get_or_default ... ok of 1
: Assignmenttest box_trait::tests::test_bool_box_creation ... ok

🔍 execute_statement called with node type: "test boxes::null_box::tests::test_null_check ... okAssignment"

test backend::vm::tests::test_binary_operations ... ok🔍 About to call execute_assignment...

🔍 execute_assignment called, evaluating value expression...
test boxes::null_box::tests::test_null_creation ... ok🔍 execute_new called for class: IntegerBox
, with 1test backend::vm_phi::tests::test_phi_selection ... ok arguments

🔍 Trying unified registry for class: IntegerBoxtest boxes::null_box::tests::test_null_equality ... ok

🔍 DEBUG: Starting interpreter execution...
test cli::tests::test_default_config ... ok🔍 DEBUG: execute_node called with node type: Program

test ast::tests::test_complex_ast ... ok🔍 DEBUG: Executing program with 4
 statements
test bid::bridge::tests::test_integer_box_bid_conversion ... ok🔍 DEBUG: Executing statement 1
 of 4test bid::bridge::tests::test_box_registry ... ok: BoxDeclaration

test bid::bridge::tests::test_future_box_bid_conversion ... ok🔍 execute_statement called with node type: "
BoxDeclaration"test bid::bridge::tests::test_string_box_bid_conversion ... ok

test cli::tests::test_parse_debug_fuel ... 🔍 DEBUG: Starting interpreter execution...
ok
🔍 DEBUG: execute_node called with node type: Programtest environment::tests::test_error_handling ... ok

🔍 DEBUG: Executing program with 2test environment::tests::test_global_environment ... ok statements

🔍 DEBUG: Executing statement 1test environment::tests::test_nested_scopes ... ok of 2
: Assignmenttest environment::tests::test_python_compat ... ok

🔍 execute_statement called with node type: "test environment::tests::test_variable_setting ... okAssignment"

test environment::tests::test_scope_info ... ok🔍 About to call execute_assignment...

🔍 execute_assignment called, evaluating value expression...
test environment::tests::test_variable_shadowing ... ok🔍 execute_new called for class: BoolBox
, with 1test finalization::tests::test_finalization_tracking ... ok arguments

🔍 Trying unified registry for class: BoolBoxtest instance_v2::tests::test_field_operations ... ok

🔍 execute_statement called with node type: "test instance_v2::tests::test_from_any_box_creation ... okBoxDeclaration"

test instance_v2::tests::test_from_declaration_creation ... ok🏭 Unified registry created: IntegerBox

test instance_v2::tests::test_unified_approach ... ok🔍 DEBUG: Statement 1
 completed
test config::nyash_toml_v2::tests::test_parse_v2_config ... ok🔍 DEBUG: Executing statement 2
 of 4test mir::basic_block::tests::test_basic_block_creation ... ok: Assignment

test bid::plugins::filebox::tests::test_filebox_plugin ... ok🔍 execute_statement called with node type: "
Assignment"test mir::basic_block::tests::test_basic_block_id_generator ... ok

🔍 About to call execute_assignment...
test mir::basic_block::tests::test_branch_successors ... ok🔍 execute_assignment called, evaluating value expression...

🔍 execute_new called for class: TestBoxtest mir::basic_block::tests::test_instruction_addition ... ok, with 0
 arguments
test mir::basic_block::tests::test_phi_instruction_ordering ... ok🔍 Trying unified registry for class: TestBox

test mir::basic_block::tests::test_terminator_addition ... ok🔍 execute_new called for class: IntegerBox
, with 1test mir::basic_block::tests::test_value_tracking ... ok arguments

🔍 Trying unified registry for class: IntegerBoxtest mir::builder::tests::test_binary_op_building ... ok

🔍 DEBUG: Starting interpreter execution...
test mir::builder::tests::test_if_statement_building ... ok🔍 DEBUG: execute_node called with node type: Program

test mir::builder::tests::test_literal_building ... ok🔍 DEBUG: Executing program with 2
 statements
test mir::effect::tests::test_effect_combination ... ok🔍 DEBUG: Executing statement 1
 of 2test mir::effect::tests::test_effect_display ... ok: Assignment

test mir::effect::tests::test_effect_mask_creation ... ok🔍 execute_statement called with node type: "
Assignment"test mir::effect::tests::test_effect_names ... ok

🔍 About to call execute_assignment...
test mir::effect::tests::test_effect_union ... ok🔍 execute_assignment called, evaluating value expression...

🔍 execute_new called for class: IntegerBoxtest mir::effect::tests::test_parallel_safety ... ok, with 1
 arguments
test mir::function::tests::test_function_creation ... ok🔍 Trying unified registry for class: IntegerBox

test mir::function::tests::test_function_stats ... ok🌍 statics namespace created in GlobalBox successfully

🔥 Static Box 'Maintest mir::function::tests::test_module_creation ... ok' definition registered in statics namespace

🔍 DEBUG: Statement 1test mir::function::tests::test_value_id_generation ... ok completed

🏭 Unified registry created: BoolBoxtest mir::instruction::tests::test_barrier_instructions ... ok

🌍 statics namespace already exists - skipping creation
test mir::instruction::tests::test_binop_instruction ... ok🔍 execute_assignment: value expression evaluated successfully

🏭 Unified registry created: TestBoxtest mir::instruction::tests::test_call_instruction ... ok

🔥 Static box 'Maintest mir::instruction::tests::test_const_instruction ... ok' instance registered in statics namespace

🔍 DEBUG: Statement 1test mir::instruction::tests::test_extern_call_instruction ... ok completed

🔍 DEBUG: Executing statement 2test mir::instruction::tests::test_ref_get_instruction ... ok of 2
: Iftest mir::instruction::tests::test_ref_new_instruction ... ok

🔍 execute_statement called with node type: "test mir::instruction::tests::test_ref_set_instruction ... okIf"

test mir::instruction::tests::test_weak_load_instruction ... ok🔍 execute_statement called with node type: "
MethodCall"test mir::instruction::tests::test_weak_new_instruction ... ok

🔍 execute_assignment: value expression evaluated successfully
test mir::instruction_v2::tests::test_effect_categories ... ok🏭 Unified registry created: IntegerBox

test mir::instruction_v2::tests::test_instruction_count ... ok🔍 DEBUG: resolve_variable: name='x', local_vars=[]

test mir::instruction_v2::tests::test_ownership_operations ... ok🔍 DEBUG: Checking GlobalBox for 'x
'...
test mir::ownership_verifier_simple::tests::test_basic_ref_set ... ok🔍 DEBUG: Found 'x
' in GlobalBox
test mir::ownership_verifier_simple::tests::test_ownership_forest_basic ... ok🔍 execute_statement called with node type: "
Assignment"test mir::ownership_verifier_simple::tests::test_weak_reference_tracking ... ok

🔍 About to call execute_assignment...
test mir::printer::tests::test_empty_module_printing ... ok🔍 execute_assignment called, evaluating value expression...

🔍 execute_new called for class: StringBoxtest mir::printer::tests::test_function_printing ... ok, with 1
 arguments
test mir::printer::tests::test_verbose_printing ... ok🔍 Trying unified registry for class: StringBox

test mir::tests::test_basic_mir_compilation ... ok🏭 Unified registry created: IntegerBox

test mir::tests::test_loop_compilation ... ok🔍 DEBUG: Statement 2
 completed
test mir::tests::test_mir_dump ... ok🔍 DEBUG: Executing statement 3
 of 4test mir::tests::test_throw_compilation ... ok: Assignment

test mir::tests::test_try_catch_compilation ... ok🔍 execute_statement called with node type: "
Assignment"test mir::value_id::tests::test_local_id_creation ... ok

🔍 About to call execute_assignment...
test mir::value_id::tests::test_local_id_generator ... ok🔍 execute_assignment called, evaluating value expression...

🔍 execute_new called for class: StringBoxtest mir::value_id::tests::test_value_id_creation ... ok, with 1
 arguments
test mir::value_id::tests::test_value_id_generator ... ok🔍 Trying unified registry for class: StringBox

test mir::value_id::tests::test_value_id_ordering ... ok🔍 execute_assignment: value expression evaluated successfully

🏭 Unified registry created: StringBoxtest mir::verification::tests::test_undefined_value_detection ... ok

🔍 DEBUG: resolve_variable: name='statics', local_vars=[]test mir::verification::tests::test_valid_function_verification ... ok

🔍 DEBUG: Checking GlobalBox for 'staticstest runner::tests::test_runner_creation ... ok'...

🔍 DEBUG: Found 'staticstest runtime::box_registry::tests::test_builtin_registration ... ok' in GlobalBox

🔍 execute_assignment: value expression evaluated successfully
test runtime::box_registry::tests::test_plugin_override ... ok🏭 Unified registry created: StringBox

test runtime::plugin_config::tests::test_parse_empty_config ... ok🔍 execute_assignment: value expression evaluated successfully

test runtime::plugin_config::tests::test_parse_simple_config ... 🔍 DEBUG: Statement 1ok
 completed
test runtime::plugin_config::tests::test_parse_with_comments ... ok🔍 DEBUG: Executing statement 2
test runtime::tests::tests::test_box_registry_builtin ...  of 2ok
: Printtest runtime::tests::tests::test_box_registry_plugin_override ... ok

test runtime::tests::tests::test_multiple_plugin_types ... 🔍 execute_statement called with node type: "ok
Print"test runtime::tests::tests::test_plugin_config_parsing ... ok

test runtime::tests::tests::test_transparent_box_switching ... 🔧 execute_binary_op: op=Addok
, left=IntegerBoxtest tests::test_main_functionality ... ok, right=IntegerBox
test tokenizer::tests::test_comments ... 
ok
🔍 try_add_operation: left=IntegerBoxtest tokenizer::tests::test_complex_code ... ok, right=IntegerBox
test tokenizer::tests::test_error_handling ... 
ok
🔍 After unwrap: left=IntegerBoxtest tokenizer::tests::test_identifier ... ok, right=IntegerBox
test tokenizer::tests::test_line_numbers ... 
ok
🔍 IntegerBox + IntegerBox detected
test tokenizer::tests::test_number_literal ... ok🔍 execute_assignment: value expression evaluated successfully

🔍 DEBUG: resolve_variable: name='obj', local_vars=[]test tokenizer::tests::test_operators ... ok

🔍 DEBUG: Checking GlobalBox for 'objtest tokenizer::tests::test_simple_tokens ... ok'...

test tokenizer::tests::test_string_literal ... 🔍 DEBUG: Found 'objok
' in GlobalBox
test value::tests::test_basic_creation ... ok🔍 DEBUG: resolve_variable: name='x', local_vars=[]

test value::tests::test_cross_type_equality ... ok🔍 DEBUG: Checking GlobalBox for 'x
'...
test value::tests::test_object_creation ... ok🔍 DEBUG: Found 'x
' in GlobalBox
test value::tests::test_type_conversion ... 🔍 DEBUG: Statement 2ok completed

🔍 DEBUG: Statement 342
 completed
test value::tests::test_type_names ... ok🔍 DEBUG: Executing statement 4
 of 4test value::tests::test_weak_reference_basic ... ok: Assignment

test value::tests::test_weak_reference_drop ... ok🔍 execute_statement called with node type: "
Assignment"test value::tests::test_weak_reference_equality ... ok

🔍 About to call execute_assignment...
test value::tests::test_weak_reference_string_representation ... ok🔍 execute_assignment called, evaluating value expression...

🔍 stdlib not initialized for method call
✅ FIELD ACCESS: Returning shared reference id=136
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Interpreter execution completed
test interpreter::core::tests::test_simple_execution ... ok🔍 execute_statement called with node type: "
Local"
🔍 DEBUG: resolve_variable: name='y', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'y'...
🔍 DEBUG: Found 'y' in GlobalBox
🔍 execute_statement called with node type: "test interpreter::core::tests::test_if_statement ... okAssignment"

🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result'...
🔍 DEBUG: Found 'result' in GlobalBox
🏭 Unified registry created: IntegerBoxtest interpreter::core::tests::test_arithmetic ... ok

🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=135
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
✅ FIELD ACCESS: Returning shared reference id=150
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: Statement 4 completed
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Interpreter execution completed
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=["b", "result", "c", "me", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=171
🔍 DEBUG: resolve_variable: name='result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result'...
🔍 DEBUG: Found 'result' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["b", "result", "c", "me", "a"]test interpreter::core::tests::test_box_instance_creation ... ok
🔍 DEBUG: Found '
b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=176
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "result", "c", "me", "a"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=185
🔍 DEBUG: resolve_variable: name='c', local_vars=["b", "result", "c", "me", "a"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=182
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "result", "c", "me", "a"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=187
🔍 DEBUG: resolve_variable: name='a', local_vars=["b", "result", "c", "me", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=171
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "result", "c", "me", "a"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=189
🔍 DEBUG: resolve_variable: name='b', local_vars=["b", "result", "c", "me", "a"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=176
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "result", "c", "me", "a"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=191
88
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result', local_vars=["b", "result", "c", "me", "a"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=191
🔍 DEBUG: Interpreter execution completed
  📊 Interpreter: First run completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=200
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=209
🔍 DEBUG: resolve_variable: name='b', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=213
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=219
🔍 DEBUG: resolve_variable: name='c', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=217
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=221
🔍 DEBUG: resolve_variable: name='a', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=209
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=223
🔍 DEBUG: resolve_variable: name='b', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=213
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=225
88
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result', local_vars=["c", "b", "a", "me", "result"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=225
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=234
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=243
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=247
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=253
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=251
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=255
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=243
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=257
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=247
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=259
88
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result', local_vars=["me", "result", "a", "b", "c"]
🔍 DEBUG: Found 'result' in local_vars
✅ RESOLVE_VARIABLE shared reference: result id=259
🔍 DEBUG: Interpreter execution completed
88
  🏎️ VM: First run completed
88
88
🚀 Running benchmark: bench_medium
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=271
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔗 DEBUG: Variable 'sum' set to 0 - simulating object drop
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=273
🔗 DEBUG: Old value being dropped: void
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=284
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=279
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=293
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=284
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=300
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=295
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=309
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=300
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=316
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=311
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=325
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=316
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=332
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=327
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=341
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=332
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=348
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=343
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=357
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=348
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=364
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=359
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=373
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=364
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=380
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=375
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=389
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=380
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=396
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=391
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=405
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=396
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=412
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=407
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=421
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=412
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=428
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=423
🔍 DEBUG: resolve_variable: name='temp', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=437
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=439
140
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["temp", "me", "sum", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=439
🔍 DEBUG: Interpreter execution completed
  📊 Interpreter: First run completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=448
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔗 DEBUG: Variable 'sum' set to 0 - simulating object drop
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=450
🔗 DEBUG: Old value being dropped: void
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=461
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=456
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=470
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=461
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=477
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=472
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=486
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=477
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=493
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=488
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=502
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=493
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=509
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=504
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=518
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=509
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=525
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=520
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=534
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=525
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=541
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=536
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=550
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=541
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=557
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=552
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=566
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=557
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=573
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=568
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=582
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=573
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=589
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=584
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=598
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=589
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=605
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=600
🔍 DEBUG: resolve_variable: name='temp', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=614
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=616
140
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["sum", "me", "temp", "i"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=616
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=625
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔗 DEBUG: Variable 'sum' set to 0 - simulating object drop
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=627
🔗 DEBUG: Old value being dropped: void
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=638
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=633
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=647
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=638
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=654
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=649
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=663
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=654
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=670
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=665
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=679
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=670
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=686
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=681
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=695
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=686
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=702
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=697
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=711
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=702
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=718
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=713
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=727
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=718
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=734
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=729
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=743
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=734
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=750
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=745
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=759
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=750
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=766
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=761
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=775
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=766
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=782
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=777
🔍 DEBUG: resolve_variable: name='temp', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'temp' in local_vars
✅ RESOLVE_VARIABLE shared reference: temp id=791
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=793
140
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='sum', local_vars=["me", "i", "temp", "sum"]
🔍 DEBUG: Found 'sum' in local_vars
✅ RESOLVE_VARIABLE shared reference: sum id=793
🔍 DEBUG: Interpreter execution completed
140
  🏎️ VM: First run completed
140
140
🚀 Running benchmark: bench_heavy
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=805
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=826
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=830
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=834
🔍 DEBUG: resolve_variable: name='d', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=838
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=842
🔍 DEBUG: resolve_variable: name='f', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=846
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='g', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=850
🔍 DEBUG: resolve_variable: name='h', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=854
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=858
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=862
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=826
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=868
🔍 DEBUG: resolve_variable: name='result2', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=873
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=830
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=834
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=877
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=826
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=830
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=834
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=881
🔍 DEBUG: resolve_variable: name='result1', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=868
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='result2', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=873
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=884
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=826
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=830
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=834
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=888
🔍 DEBUG: resolve_variable: name='d', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=838
🔍 DEBUG: resolve_variable: name='e', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=842
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='f', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=846
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=892
🔍 DEBUG: resolve_variable: name='g', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=850
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=854
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=858
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=896
🔍 DEBUG: resolve_variable: name='j', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=862
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=826
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=830
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=900
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=834
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=838
🔍 DEBUG: resolve_variable: name='e', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=842
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=904
🔍 DEBUG: resolve_variable: name='f', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=846
🔍 DEBUG: resolve_variable: name='g', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=850
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='h', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=854
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=908
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=858
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='j', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=862
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=826
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=912
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=830
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=834
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='d', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=838
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=916
🔍 DEBUG: resolve_variable: name='e', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=842
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='f', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=846
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='g', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=850
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=920
🔍 DEBUG: resolve_variable: name='h', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=854
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=858
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=862
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=924
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=826
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=830
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=834
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=928
🔍 DEBUG: resolve_variable: name='d', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=838
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=842
🔍 DEBUG: resolve_variable: name='f', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=846
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=932
🔍 DEBUG: resolve_variable: name='g', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=850
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=854
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='i', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=858
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=936
🔍 DEBUG: resolve_variable: name='j', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=862
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=826
🔍 DEBUG: resolve_variable: name='b', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=830
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=940
🔍 DEBUG: resolve_variable: name='c', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=834
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=838
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=842
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=944
6301391
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["me", "result3", "c", "a", "i", "result4", "b", "j", "result2", "f", "d", "g", "result1", "result5", "h", "e"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=944
🔍 DEBUG: Interpreter execution completed
  📊 Interpreter: First run completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=953
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=974
🔍 DEBUG: resolve_variable: name='b', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=978
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=982
🔍 DEBUG: resolve_variable: name='d', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=986
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=990
🔍 DEBUG: resolve_variable: name='f', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=994
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='g', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=998
🔍 DEBUG: resolve_variable: name='h', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1002
🔍 DEBUG: resolve_variable: name='i', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1006
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1010
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='a', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=974
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1016
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1021
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=978
🔍 DEBUG: resolve_variable: name='c', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=982
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1025
🔍 DEBUG: resolve_variable: name='a', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=974
🔍 DEBUG: resolve_variable: name='b', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=978
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=982
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1029
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1016
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1021
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1032
🔍 DEBUG: resolve_variable: name='a', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=974
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=978
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='c', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=982
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1036
🔍 DEBUG: resolve_variable: name='d', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=986
🔍 DEBUG: resolve_variable: name='e', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=990
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='f', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=994
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1040
🔍 DEBUG: resolve_variable: name='g', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=998
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1002
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='i', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1006
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1044
🔍 DEBUG: resolve_variable: name='j', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1010
🔍 DEBUG: resolve_variable: name='a', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=974
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='b', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=978
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1048
🔍 DEBUG: resolve_variable: name='c', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=982
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=986
🔍 DEBUG: resolve_variable: name='e', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=990
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1052
🔍 DEBUG: resolve_variable: name='f', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=994
🔍 DEBUG: resolve_variable: name='g', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=998
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='h', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1002
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1056
🔍 DEBUG: resolve_variable: name='i', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1006
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='j', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1010
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=974
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1060
🔍 DEBUG: resolve_variable: name='b', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=978
🔍 DEBUG: resolve_variable: name='c', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=982
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='d', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=986
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1064
🔍 DEBUG: resolve_variable: name='e', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=990
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='f', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=994
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='g', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=998
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1068
🔍 DEBUG: resolve_variable: name='h', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1002
🔍 DEBUG: resolve_variable: name='i', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1006
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1010
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1072
🔍 DEBUG: resolve_variable: name='a', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=974
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=978
🔍 DEBUG: resolve_variable: name='c', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=982
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1076
🔍 DEBUG: resolve_variable: name='d', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=986
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=990
🔍 DEBUG: resolve_variable: name='f', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=994
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1080
🔍 DEBUG: resolve_variable: name='g', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=998
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1002
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='i', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1006
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1084
🔍 DEBUG: resolve_variable: name='j', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1010
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=974
🔍 DEBUG: resolve_variable: name='b', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=978
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1088
🔍 DEBUG: resolve_variable: name='c', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=982
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=986
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=990
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1092
6301391
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["result1", "f", "me", "result2", "a", "g", "result3", "b", "h", "d", "j", "result5", "c", "e", "i", "result4"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1092
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=1101
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1122
🔍 DEBUG: resolve_variable: name='b', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1126
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1130
🔍 DEBUG: resolve_variable: name='d', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1134
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1138
🔍 DEBUG: resolve_variable: name='f', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1142
🔧 execute_binary_op: op=Divide, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='g', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1146
🔍 DEBUG: resolve_variable: name='h', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1150
🔍 DEBUG: resolve_variable: name='i', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1154
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1158
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='a', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1122
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1164
🔍 DEBUG: resolve_variable: name='result2', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1169
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1126
🔍 DEBUG: resolve_variable: name='c', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1130
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1173
🔍 DEBUG: resolve_variable: name='a', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1122
🔍 DEBUG: resolve_variable: name='b', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1126
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='c', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1130
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1177
🔍 DEBUG: resolve_variable: name='result1', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1164
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='result2', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1169
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1180
🔍 DEBUG: resolve_variable: name='a', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1122
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1126
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='c', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1130
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1184
🔍 DEBUG: resolve_variable: name='d', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1134
🔍 DEBUG: resolve_variable: name='e', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1138
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='f', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1142
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1188
🔍 DEBUG: resolve_variable: name='g', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1146
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1150
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='i', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1154
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1192
🔍 DEBUG: resolve_variable: name='j', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1158
🔍 DEBUG: resolve_variable: name='a', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1122
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='b', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1126
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1196
🔍 DEBUG: resolve_variable: name='c', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1130
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1134
🔍 DEBUG: resolve_variable: name='e', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1138
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1200
🔍 DEBUG: resolve_variable: name='f', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1142
🔍 DEBUG: resolve_variable: name='g', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1146
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='h', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1150
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1204
🔍 DEBUG: resolve_variable: name='i', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1154
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='j', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1158
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1122
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1208
🔍 DEBUG: resolve_variable: name='b', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1126
🔍 DEBUG: resolve_variable: name='c', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1130
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='d', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1134
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1212
🔍 DEBUG: resolve_variable: name='e', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1138
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='f', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1142
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='g', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1146
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1216
🔍 DEBUG: resolve_variable: name='h', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1150
🔍 DEBUG: resolve_variable: name='i', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1154
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='j', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1158
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result5', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1220
🔍 DEBUG: resolve_variable: name='a', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1122
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1126
🔍 DEBUG: resolve_variable: name='c', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1130
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result1', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result1' in local_vars
✅ RESOLVE_VARIABLE shared reference: result1 id=1224
🔍 DEBUG: resolve_variable: name='d', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1134
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1138
🔍 DEBUG: resolve_variable: name='f', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'f' in local_vars
✅ RESOLVE_VARIABLE shared reference: f id=1142
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result2' in local_vars
✅ RESOLVE_VARIABLE shared reference: result2 id=1228
🔍 DEBUG: resolve_variable: name='g', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'g' in local_vars
✅ RESOLVE_VARIABLE shared reference: g id=1146
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='h', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'h' in local_vars
✅ RESOLVE_VARIABLE shared reference: h id=1150
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='i', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'i' in local_vars
✅ RESOLVE_VARIABLE shared reference: i id=1154
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result3', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result3' in local_vars
✅ RESOLVE_VARIABLE shared reference: result3 id=1232
🔍 DEBUG: resolve_variable: name='j', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'j' in local_vars
✅ RESOLVE_VARIABLE shared reference: j id=1158
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='a', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'a' in local_vars
✅ RESOLVE_VARIABLE shared reference: a id=1122
🔍 DEBUG: resolve_variable: name='b', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'b' in local_vars
✅ RESOLVE_VARIABLE shared reference: b id=1126
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result4', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result4' in local_vars
✅ RESOLVE_VARIABLE shared reference: result4 id=1236
🔍 DEBUG: resolve_variable: name='c', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'c' in local_vars
✅ RESOLVE_VARIABLE shared reference: c id=1130
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: resolve_variable: name='d', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'd' in local_vars
✅ RESOLVE_VARIABLE shared reference: d id=1134
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='e', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'e' in local_vars
✅ RESOLVE_VARIABLE shared reference: e id=1138
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Print"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1240
6301391
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='result5', local_vars=["i", "result3", "result1", "b", "me", "j", "h", "g", "result5", "f", "c", "d", "result2", "result4", "e", "a"]
🔍 DEBUG: Found 'result5' in local_vars
✅ RESOLVE_VARIABLE shared reference: result5 id=1240
🔍 DEBUG: Interpreter execution completed
6301391
  🏎️ VM: First run completed
6301391
6301391

📊 Nyash Performance Benchmark Results
=====================================
Iterations per test: 3

🎯 bench_light
  Backend       | Avg Time (ms) | Total Time (ms) | Speed Ratio
  --------------|---------------|-----------------|------------
  Interpreter  |      84.250 |         252.7 |   261.17x
  VM           |       0.323 |           1.0 |     1.00x

🎯 bench_heavy
  Backend       | Avg Time (ms) | Total Time (ms) | Speed Ratio
  --------------|---------------|-----------------|------------
  Interpreter  |     271.596 |         814.8 |   403.33x
  VM           |       0.673 |           2.0 |     1.00x

🎯 bench_medium
  Backend       | Avg Time (ms) | Total Time (ms) | Speed Ratio
  --------------|---------------|-----------------|------------
  Interpreter  |     234.877 |         704.6 |   380.04x
  VM           |       0.618 |           1.9 |     1.00x

💡 Performance Summary:
  📈 Average across all benchmarks:
     Interpreter: 196.91 ms
     VM:          0.54 ms (366.0x faster than interpreter)
     WASM:        NaN ms (NaNx faster than interpreter)
test benchmarks::tests::test_benchmark_light ... ok

test result: ok. 145 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.82s

     Running tests/array_state_sharing_test.rs (target/debug/deps/array_state_sharing_test-892ed54276bf1011)

running 3 tests
test array_state_sharing_tests::test_share_box_vs_clone_box_semantics ... ok
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 1 statements
🔍 DEBUG: Executing statement 1 of 1: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🔍 execute_statement called with node type: "BoxDeclaration"
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace created in GlobalBox successfully
🔥 Static Box 'Main' definition registered in statics namespace
🔍 DEBUG: Statement 1 completed
🌍 statics namespace already exists - skipping creation
🌍 statics namespace already exists - skipping creation
🔥 Static box 'Main' instance registered in statics namespace
🔥 Static box 'Main' instance registered in statics namespace
🔍 execute_statement called with node type: "MethodCall"
🔍 execute_statement called with node type: "MethodCall"
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
🔍 DEBUG: resolve_variable: name='statics', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'statics'...
🔍 DEBUG: Found 'statics' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=19
✅ FIELD ACCESS: Returning shared reference id=17
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_statement called with node type: "Local"
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: ArrayBox, with 0 arguments
🔍 Trying unified registry for class: ArrayBox
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: ArrayBox, with 0 arguments
🔍 Trying unified registry for class: ArrayBox
🏭 Unified registry created: ArrayBox
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: ArrayBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='arr', local_vars=["arr", "me"]
🔍 DEBUG: Found 'arr' in local_vars
✅ RESOLVE_VARIABLE shared reference: arr id=29
🔍 DEBUG: resolve_variable: name='arr', local_vars=["me", "arr"]
🔍 DEBUG: Found 'arr' in local_vars
✅ RESOLVE_VARIABLE shared reference: arr id=31
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🏭 Unified registry created: StringBox
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🏭 Unified registry created: StringBox
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='arr', local_vars=["me", "arr"]
🔍 DEBUG: Found 'arr' in local_vars
✅ RESOLVE_VARIABLE shared reference: arr id=31
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='arr', local_vars=["arr", "me"]
🔍 DEBUG: Found 'arr' in local_vars
✅ RESOLVE_VARIABLE shared reference: arr id=29
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 DEBUG: resolve_variable: name='me', local_vars=["me", "arr"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=17
🏭 Unified registry created: StringBox
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='arr', local_vars=["arr", "me"]
🔍 DEBUG: Found 'arr' in local_vars
✅ RESOLVE_VARIABLE shared reference: arr id=29
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 DEBUG: resolve_variable: name='me', local_vars=["me", "arr"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=17
✅ FIELD ACCESS: Returning shared reference id=41
🏭 Unified registry created: StringBox
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='arr', local_vars=["arr", "me"]test array_state_sharing_tests::test_arraybox_state_sharing_bug_fix ... ok
🔍 DEBUG: Found '
arr' in local_vars
✅ RESOLVE_VARIABLE shared reference: arr id=29
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='me', local_vars=["arr", "me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=19
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='me', local_vars=["arr", "me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=19
✅ FIELD ACCESS: Returning shared reference id=52
🔍 DEBUG: Interpreter execution completed
test array_state_sharing_tests::test_multiple_operations_state_preservation ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.10s

     Running tests/integration_tests.rs (target/debug/deps/integration_tests-4636610fbd1b2065)

running 16 tests

thread 'integration_tests::test_function_declaration_and_call' panicked at tests/integration_tests.rs:143:57:
called `Result::unwrap()` on an `Err` value: "Parse error: Invalid statement at line 2"
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

thread 'integration_tests::test_loop_with_break' panicked at tests/integration_tests.rs:129:58:
called `Result::unwrap()` on an `Err` value: "Parse error: Unexpected token LBRACE, expected LPAREN at line 3"

thread 'integration_tests::test_global_variables' panicked at tests/integration_tests.rs:276:57:
called `Result::unwrap()` on an `Err` value: "Parse error: Invalid statement at line 5"

thread 'integration_tests::test_method_chaining_concept' panicked at tests/integration_tests.rs:227:57:
called `Result::unwrap()` on an `Err` value: "Parse error: Unexpected token INIT, expected identifier at line 21"
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 3 statements
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 6 statements
🔍 DEBUG: Executing statement 1test integration_tests::test_global_variables ... FAILED of 6
test integration_tests::test_function_declaration_and_call ... : AssignmentFAILED

test integration_tests::test_method_chaining_concept ... FAILED🔍 execute_statement called with node type: "
Assignment"test integration_tests::test_loop_with_break ... FAILED
🔍 About to call execute_assignment...

🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 5 statements
🔍 DEBUG: Executing statement 1 of 5: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 9 statements
🔍 DEBUG: Executing statement 1 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: TestBox, with 0 arguments
🔍 Trying unified registry for class: TestBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 4 statements
🔍 DEBUG: Executing statement 1 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 3 statements
🔍 DEBUG: Executing statement 1 of 3: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 4 statements
🔍 DEBUG: Executing statement 1 of 4: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🏭 Unified registry created: TestBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 2 statements
🔍 DEBUG: Executing statement 1 of 2: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: BoolBox, with 1 arguments
🔍 Trying unified registry for class: BoolBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 7 statements
🔍 DEBUG: Executing statement 1 of 7: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 5 statements
🔍 DEBUG: Executing statement 1 of 5: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🔍 DEBUG: Executing statement 1 of 3: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 4 statements
🔍 DEBUG: Executing statement 1 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: BoolBox, with 1 arguments
🔍 Trying unified registry for class: BoolBox
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: Calculator, with 0 arguments
🔍 Trying unified registry for class: Calculator
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 7: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: Data, with 0 arguments
🔍 Trying unified registry for class: Data
🏭 Unified registry created: IntegerBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 6 statements
🔍 DEBUG: Executing statement 1 of 6: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: Point, with 0 arguments
🔍 Trying unified registry for class: Point
🏭 Unified registry created: IntegerBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 6: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: Container, with 0 arguments
🔍 Trying unified registry for class: Container
🏭 Unified registry created: BoolBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 3: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: StringBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: BoolBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 3: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 2: If
🔍 execute_statement called with node type: "If"
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: BoolBox, with 1 arguments
🔍 Trying unified registry for class: BoolBox
🔍 DEBUG: resolve_variable: name='condition', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'condition'...
🔍 DEBUG: Found 'condition' in GlobalBox
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: Calculator
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: Data
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 5: MethodCall
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🏭 Unified registry created: Point
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='calc', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'calc'...
🔍 DEBUG: Found 'calc' in GlobalBox
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 7: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: Data, with 0 arguments
🔍 Trying unified registry for class: Data
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: StringBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: Container
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 3: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: StringBox
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 DEBUG: resolve_variable: name='container', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'container'...
🔍 DEBUG: Found 'container' in GlobalBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🏭 Unified registry created: BoolBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 3: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: Wrapper, with 0 arguments
🔍 Trying unified registry for class: Wrapper
✅ FIELD ACCESS: Returning shared reference id=77
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='greeting', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'greeting'...
🔍 DEBUG: Found 'greeting' in GlobalBox
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: StringBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Less, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='name', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'name'...
🔍 DEBUG: Found 'name' in GlobalBox
🔧 execute_binary_op: op=Add, left=StringBox, right=StringBox
🔍 try_add_operation: left=StringBox, right=StringBox
🔍 After unwrap: left=StringBox, right=StringBox
🔍 Checking StringBox downcast...
🔍 StringBox downcast SUCCESS!
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🏭 Unified registry created: IntegerBox
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=And, left=BoolBox, right=BoolBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='message', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'message'...
🔍 DEBUG: Found 'message' in GlobalBox
🔍 execute_statement called with node type: "test integration_tests::test_string_operations ... okReturn"

🔍 DEBUG: Statement 2 completed
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: Data
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=20
✅ FIELD ACCESS: Returning shared reference id=77
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Or, left=BoolBox, right=BoolBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='direct_access', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'direct_access'...
🔍 DEBUG: Found 'direct_access' in GlobalBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Statement 4 completed
🏭 Unified registry created: IntegerBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Greater, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 DEBUG: resolve_variable: name='v', local_vars=["me", "v"]
🔍 DEBUG: Found 'v' in local_vars
✅ RESOLVE_VARIABLE shared reference: v id=122
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Interpreter execution completed
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='and_result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'and_result'...
🔍 DEBUG: Found 'and_result' in GlobalBox
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result'...
🔍 DEBUG: Found 'result' in GlobalBox
🔍 DEBUG: resolve_variable: name='result', local_vars=[]test integration_tests::test_if_else_statements ... ok

🔍 DEBUG: Checking GlobalBox for 'result'...
🔍 DEBUG: Found 'result' in GlobalBox
🔍 execute_assignment: value expression evaluated successfully
test integration_tests::test_basic_arithmetic ... ok🏭 Unified registry created: Wrapper

🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='me', local_vars=["me", "v"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=66
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 4 statements
🔍 DEBUG: Executing statement 1 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: BoolBox, with 1 arguments
🔍 Trying unified registry for class: BoolBox
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 7: MethodCall
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 5: MethodCall
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🏭 Unified registry created: BoolBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='d1', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'd1'...
🔍 DEBUG: Found 'd1' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: BoolBox, with 1 arguments
🔍 Trying unified registry for class: BoolBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🏭 Unified registry created: BoolBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='p', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'p'...
🔍 DEBUG: Found 'p' in GlobalBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 5 statements
🔍 DEBUG: Executing statement 1 of 5: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='calc', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'calc'...
🔍 DEBUG: Found 'calc' in GlobalBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: TestBox, with 0 arguments
🔍 Trying unified registry for class: TestBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=Equal, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: TestBox
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='c', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'c'...
🔍 DEBUG: Found 'c' in GlobalBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='p', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'p'...
🔍 DEBUG: Found 'p' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🏭 Unified registry created: StringBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=81
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=76
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=And, left=BoolBox, right=BoolBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=NotEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: resolve_variable: name='v', local_vars=["v", "me"]
🔍 DEBUG: Found 'v' in local_vars
✅ RESOLVE_VARIABLE shared reference: v id=171
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 2 completed
✅ FIELD ACCESS: Returning shared reference id=129
🔍 DEBUG: Statement 6 completed
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=Less, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 4: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='me', local_vars=["me", "amount"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=66
🔍 DEBUG: Executing statement 3 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=81
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: Executing statement 7 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
✅ FIELD ACCESS: Returning shared reference id=122
✅ FIELD ACCESS: Returning shared reference id=142
🔍 DEBUG: resolve_variable: name='less', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'less'...
🔍 DEBUG: Found 'less' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Or, left=BoolBox, right=BoolBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result'...
🔍 DEBUG: Found 'result' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]test integration_tests::test_complex_expression_evaluation ... ok

🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 6: MethodCall
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='amount', local_vars=["me", "amount"]
🔍 DEBUG: Found 'amount' in local_vars
✅ RESOLVE_VARIABLE shared reference: amount id=177
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Greater, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: resolve_variable: name='me', local_vars=["me", "amount"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=66
🔍 DEBUG: resolve_variable: name='me', local_vars=["v", "me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=72
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result'...
🔍 DEBUG: Found 'result' in GlobalBox
🔍 DEBUG: resolve_variable: name='w', local_vars=[]test integration_tests::test_box_instance_creation ... ok

🔍 DEBUG: Checking GlobalBox for 'w'...
🔍 DEBUG: Found 'w' in GlobalBox
🔍 DEBUG: resolve_variable: name='or_result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'or_result'...
🔍 DEBUG: Found 'or_result' in GlobalBox
🔍 DEBUG: Statement 7
thread 'integration_tests::test_boolean_logic' panicked at tests/integration_tests.rs:81:9:
assertion `left == right` failed
  left: "true"
 right: "false"
 completed
test integration_tests::test_boolean_logic ... FAILED🔍 DEBUG: Executing statement 8
 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 7: MethodCall
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='d2', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'd2'...
🔍 DEBUG: Found 'd2' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=LessEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='me', local_vars=["me", "amount"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=66
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
✅ FIELD ACCESS: Returning shared reference id=202
🔍 DEBUG: Statement 8 completed
🔍 DEBUG: Executing statement 9 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🏭 Unified registry created: StringBox
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: StringBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 6 statements
🔍 DEBUG: Executing statement 1 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='calc', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'calc'...
🔍 DEBUG: Found 'calc' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🏭 Unified registry created: StringBox
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='v', local_vars=["me", "v"]
🔍 DEBUG: Found 'v' in local_vars
✅ RESOLVE_VARIABLE shared reference: v id=216
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 DEBUG: resolve_variable: name='me', local_vars=["me", "v"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=113
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=GreaterEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 7: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: resolve_variable: name='d1', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'd1'...
🔍 DEBUG: Found 'd1' in GlobalBox
🔍 DEBUG: resolve_variable: name='value', local_vars=["value", "me"]
🔍 DEBUG: Found 'value' in local_vars
✅ RESOLVE_VARIABLE shared reference: value id=218
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=66
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='me', local_vars=["value", "me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=142
✅ FIELD ACCESS: Returning shared reference id=202
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 DEBUG: Statement 9 completed
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Less, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='container', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'container'...
🔍 DEBUG: Found 'container' in GlobalBox
✅ FIELD ACCESS: Returning shared reference id=194
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='add_result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'add_result'...
🔍 DEBUG: Found 'add_result' in GlobalBox
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=81
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 9 statements
🔍 DEBUG: Executing statement 1 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
✅ FIELD ACCESS: Returning shared reference id=142
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=72
✅ FIELD ACCESS: Returning shared reference id=171
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: Statement 5 completed
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: Executing statement 7 of 7: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=142
✅ FIELD ACCESS: Returning shared reference id=218
🔍 DEBUG: resolve_variable: name='result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result'...
🔍 DEBUG: Found 'result' in GlobalBox
🏭 Unified registry created: IntegerBoxtest integration_tests::test_this_binding_in_methods ... ok

🔍 execute_assignment: value expression evaluated successfully
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='d2', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'd2'...
🔍 DEBUG: Found 'd2' in GlobalBox
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 5: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='obj', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'obj'...
🔍 DEBUG: Found 'obj' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Greater, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=113
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
✅ FIELD ACCESS: Returning shared reference id=216
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 execute_assignment called, evaluating value expression...
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Interpreter execution completed
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=Equal, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=164
✅ FIELD ACCESS: Returning shared reference id=194
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 7 completed
🔍 DEBUG: resolve_variable: name='result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result'...
🔍 DEBUG: Found 'result' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]test integration_tests::test_nested_method_calls ... ok

🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=NotEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='result1', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result1'...
🔍 DEBUG: Found 'result1' in GlobalBox
🔍 DEBUG: resolve_variable: name='method_result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'method_result'...
🔍 DEBUG: Found 'method_result' in GlobalBox
🔍 DEBUG: Starting interpreter execution...
test integration_tests::test_the_debug_this_problem ... ok🔍 DEBUG: execute_node called with node type: Program

🔍 DEBUG: Executing program with 7 statements
🔍 DEBUG: Executing statement 1 of 7: BoxDeclaration
🔍 execute_statement called with node type: "BoxDeclaration"
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='greater', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'greater'...
🔍 DEBUG: Found 'greater' in GlobalBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 7: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: Data, with 0 arguments
🔍 Trying unified registry for class: Data
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 6 statements
🔍 DEBUG: Executing statement 1 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: Data
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=Less, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 7: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: Data, with 0 arguments
🔍 Trying unified registry for class: Data
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: Executing statement 7 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: Data
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Greater, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 7 completed
🔍 DEBUG: Executing statement 8 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 7: MethodCall
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='d1', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'd1'...
🔍 DEBUG: Found 'd1' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=LessEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Less, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 8 completed
🔍 DEBUG: Executing statement 9 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🏭 Unified registry created: StringBox
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=GreaterEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='v', local_vars=["v", "me"]
🔍 DEBUG: Found 'v' in local_vars
✅ RESOLVE_VARIABLE shared reference: v id=318
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 9 completed
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Greater, left=IntegerBox, right=IntegerBox
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='me', local_vars=["v", "me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=291
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='sub_result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'sub_result'...
🔍 DEBUG: Found 'sub_result' in GlobalBox
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 7: MethodCall
🔍 execute_statement called with node type: "MethodCall"
🔍 stdlib not initialized for method call
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 9 statements
🔍 DEBUG: Executing statement 1 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='d2', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'd2'...
🔍 DEBUG: Found 'd2' in GlobalBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_new called for class: StringBox, with 1 arguments
🔍 Trying unified registry for class: StringBox
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🏭 Unified registry created: StringBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=Equal, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='v', local_vars=["me", "v"]
🔍 DEBUG: Found 'v' in local_vars
✅ RESOLVE_VARIABLE shared reference: v id=340
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='me', local_vars=["me", "v"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=303
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 7: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=NotEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: resolve_variable: name='d1', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'd1'...
🔍 DEBUG: Found 'd1' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='equal', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'equal'...
🔍 DEBUG: Found 'equal' in GlobalBox
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=291
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 6 statements
🔍 DEBUG: Executing statement 1 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
✅ FIELD ACCESS: Returning shared reference id=318
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: Executing statement 7 of 7: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 stdlib not initialized for method call
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='d2', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'd2'...
🔍 DEBUG: Found 'd2' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_statement called with node type: "Return"
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='me', local_vars=["me"]
🔍 DEBUG: Found 'me' in local_vars
✅ RESOLVE_VARIABLE shared reference: me id=303
✅ FIELD ACCESS: Returning shared reference id=340
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Less, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 7 completed
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Greater, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=Less, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: Executing statement 7 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='result2', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'result2'...
🔍 DEBUG: Found 'result2' in GlobalBox
🔍 execute_assignment called, evaluating value expression...
test integration_tests::test_multiple_instances ... ok🔍 DEBUG: resolve_variable: name='a', local_vars=[]

🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Greater, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 7 completed
🔍 DEBUG: Executing statement 8 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔧 execute_binary_op: op=Equal, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 6: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=LessEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 8 completed
🔍 DEBUG: Executing statement 9 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=NotEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=GreaterEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: Statement 9 completed
🔍 DEBUG: resolve_variable: name='not_equal', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'not_equal'...
🔍 DEBUG: Found 'not_equal' in GlobalBox
🔍 DEBUG: Interpreter execution completed
test integration_tests::test_comparison_operators ... ok
🔍 DEBUG: resolve_variable: name='mul_result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'mul_result'...
🔍 DEBUG: Found 'mul_result' in GlobalBox
🔍 DEBUG: Starting interpreter execution...
🔍 DEBUG: execute_node called with node type: Program
🔍 DEBUG: Executing program with 9 statements
🔍 DEBUG: Executing statement 1 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 1 completed
🔍 DEBUG: Executing statement 2 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 execute_new called for class: IntegerBox, with 1 arguments
🔍 Trying unified registry for class: IntegerBox
🏭 Unified registry created: IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 2 completed
🔍 DEBUG: Executing statement 3 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Add, left=IntegerBox, right=IntegerBox
🔍 try_add_operation: left=IntegerBox, right=IntegerBox
🔍 After unwrap: left=IntegerBox, right=IntegerBox
🔍 IntegerBox + IntegerBox detected
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 3 completed
🔍 DEBUG: Executing statement 4 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Subtract, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 4 completed
🔍 DEBUG: Executing statement 5 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Multiply, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 5 completed
🔍 DEBUG: Executing statement 6 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=Less, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 6 completed
🔍 DEBUG: Executing statement 7 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=Greater, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 7 completed
🔍 DEBUG: Executing statement 8 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔧 execute_binary_op: op=LessEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 8 completed
🔍 DEBUG: Executing statement 9 of 9: Assignment
🔍 execute_statement called with node type: "Assignment"
🔍 About to call execute_assignment...
🔍 execute_assignment called, evaluating value expression...
🔍 DEBUG: resolve_variable: name='a', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'a'...
🔍 DEBUG: Found 'a' in GlobalBox
🔍 DEBUG: resolve_variable: name='b', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'b'...
🔍 DEBUG: Found 'b' in GlobalBox
🔧 execute_binary_op: op=GreaterEqual, left=IntegerBox, right=IntegerBox
🔍 execute_assignment: value expression evaluated successfully
🔍 DEBUG: Statement 9 completed
🔍 DEBUG: Interpreter execution completed
🔍 DEBUG: resolve_variable: name='less_result', local_vars=[]
🔍 DEBUG: Checking GlobalBox for 'less_result'...
🔍 DEBUG: Found 'less_result' in GlobalBox

thread 'integration_tests::test_all_numeric_operations' panicked at tests/integration_tests.rs:351:9:
assertion `left == right` failed
  left: "false"
 right: "true"
test integration_tests::test_all_numeric_operations ... FAILED

failures:

failures:
    integration_tests::test_all_numeric_operations
    integration_tests::test_boolean_logic
    integration_tests::test_function_declaration_and_call
    integration_tests::test_global_variables
    integration_tests::test_loop_with_break
    integration_tests::test_method_chaining_concept

test result: FAILED. 10 passed; 6 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.77s

error: test failed, to rerun pass `--test integration_tests`
