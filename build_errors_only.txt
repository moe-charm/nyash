   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling serde v1.0.219
   Compiling cfg-if v1.0.1
   Compiling wasm-bindgen-shared v0.2.100
   Compiling memchr v2.7.5
   Compiling log v0.4.27
   Compiling bumpalo v3.19.0
   Compiling rustversion v1.0.21
   Compiling utf8parse v0.2.2
   Compiling autocfg v1.5.0
   Compiling regex-syntax v0.8.5
   Compiling is_terminal_polyfill v1.70.1
   Compiling anstyle v1.0.11
   Compiling colorchoice v1.0.4
   Compiling crossbeam-utils v0.8.21
   Compiling wasm-bindgen v0.2.100
   Compiling once_cell v1.21.3
   Compiling anstyle-query v1.1.3
   Compiling serde_json v1.0.142
   Compiling hashbrown v0.15.5
   Compiling equivalent v1.0.2
   Compiling itoa v1.0.15
   Compiling strsim v0.11.1
   Compiling heck v0.5.0
   Compiling clap_lex v0.7.5
   Compiling ryu v1.0.20
   Compiling thiserror v2.0.12
   Compiling rayon-core v1.12.1
   Compiling toml_write v0.1.2
   Compiling anyhow v1.0.98
   Compiling anstyle-parse v0.2.7
   Compiling either v1.15.0
   Compiling libc v0.2.174
   Compiling winnow v0.7.12
   Compiling half v2.6.0
   Compiling iana-time-zone v0.1.63
   Compiling jiff v0.2.15
   Compiling aho-corasick v1.1.3
   Compiling indexmap v2.10.0
   Compiling anstream v0.6.19
   Compiling plotters-backend v0.3.7
   Compiling ciborium-io v0.2.2
   Compiling itertools v0.10.5
   Compiling libloading v0.8.8
   Compiling same-file v1.0.6
   Compiling lazy_static v1.5.0
   Compiling cast v0.3.0
   Compiling oorandom v11.1.5
   Compiling anes v0.1.6
   Compiling ciborium-ll v0.2.2
   Compiling num-traits v0.2.19
   Compiling plotters-svg v0.3.7
   Compiling walkdir v2.5.0
   Compiling clap_builder v4.5.42
   Compiling regex-automata v0.4.9
   Compiling criterion-plot v0.5.0
   Compiling regex v1.11.1
   Compiling env_filter v0.1.3
   Compiling crossbeam-epoch v0.9.18
   Compiling env_logger v0.11.8
   Compiling crossbeam-deque v0.8.6
   Compiling quote v1.0.40
   Compiling syn v2.0.104
   Compiling rayon v1.10.0
   Compiling is-terminal v0.4.16
   Compiling chrono v0.4.41
   Compiling plotters v0.3.7
   Compiling wasm-bindgen-backend v0.2.100
   Compiling serde_derive v1.0.219
   Compiling clap_derive v4.5.41
   Compiling thiserror-impl v2.0.12
   Compiling wasm-bindgen-macro-support v0.2.100
   Compiling wasm-bindgen-macro v0.2.100
   Compiling clap v4.5.42
   Compiling js-sys v0.3.77
   Compiling console_error_panic_hook v0.1.7
   Compiling toml_datetime v0.6.11
   Compiling serde_spanned v0.6.9
   Compiling ciborium v0.2.2
   Compiling toml_edit v0.22.27
   Compiling tinytemplate v1.2.1
   Compiling criterion v0.5.1
   Compiling toml v0.8.23
   Compiling web-sys v0.3.77
   Compiling nyash-rust v0.1.0 (/mnt/c/git/nyash-project/nyash)
error: couldn't read `examples/C:/Windows/Fonts/arial.ttf`: No such file or directory (os error 2)
  --> examples/simple_notepad_win.rs:32:57
   |
32 |           std::sync::Arc::new(egui::FontData::from_static(include_bytes!(
   |  _________________________________________________________^
33 | |             "C:/Windows/Fonts/arial.ttf"
34 | |         ))),
   | |_________^

error[E0432]: unresolved import `nyash_rust::backend::wasm`
  --> tests/wasm_poc1_basic_operations.rs:15:26
   |
15 | use nyash_rust::backend::wasm::WasmBackend;
   |                          ^^^^ could not find `wasm` in `backend`
   |
note: found an item that was configured out
  --> /mnt/c/git/nyash-project/nyash/src/backend/mod.rs:9:9
   |
9  | pub mod wasm;
   |         ^^^^
note: the item is gated behind the `wasm-backend` feature
  --> /mnt/c/git/nyash-project/nyash/src/backend/mod.rs:8:7
   |
8  | #[cfg(feature = "wasm-backend")]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0432]: unresolved import `nyash_rust::backend::wasm`
  --> tests/wasm_poc2_box_operations.rs:17:26
   |
17 | use nyash_rust::backend::wasm::WasmBackend;
   |                          ^^^^ could not find `wasm` in `backend`
   |
note: found an item that was configured out
  --> /mnt/c/git/nyash-project/nyash/src/backend/mod.rs:9:9
   |
9  | pub mod wasm;
   |         ^^^^
note: the item is gated behind the `wasm-backend` feature
  --> /mnt/c/git/nyash-project/nyash/src/backend/mod.rs:8:7
   |
8  | #[cfg(feature = "wasm-backend")]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0432]: unresolved import `nyash_rust::backend::wasm`
  --> tests/wasm_string_constants.rs:15:26
   |
15 | use nyash_rust::backend::wasm::WasmBackend;
   |                          ^^^^ could not find `wasm` in `backend`
   |
note: found an item that was configured out
  --> /mnt/c/git/nyash-project/nyash/src/backend/mod.rs:9:9
   |
9  | pub mod wasm;
   |         ^^^^
note: the item is gated behind the `wasm-backend` feature
  --> /mnt/c/git/nyash-project/nyash/src/backend/mod.rs:8:7
   |
8  | #[cfg(feature = "wasm-backend")]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^

For more information about this error, try `rustc --explain E0432`.
error: could not compile `nyash-rust` (test "wasm_poc1_basic_operations") due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error: could not compile `nyash-rust` (test "wasm_string_constants") due to 1 previous error
error: could not compile `nyash-rust` (test "wasm_poc2_box_operations") due to 1 previous error
error[E0433]: failed to resolve: unresolved import
 --> tests/array_state_sharing_test.rs:4:16
  |
4 |     use crate::boxes::array::ArrayBox;
  |                ^^^^^
  |                |
  |                unresolved import
  |                help: a similar path exists: `nyash_rust::boxes`

error[E0432]: unresolved import `crate::mir`
 --> tests/mir_phase8_5_hierarchical_25_instructions.rs:7:12
  |
7 | use crate::mir::{
  |            ^^^
  |            |
  |            unresolved import
  |            help: a similar path exists: `nyash_rust::mir`

error[E0432]: unresolved import `crate::interpreter`
 --> tests/array_state_sharing_test.rs:3:16
  |
3 |     use crate::interpreter::Interpreter;
  |                ^^^^^^^^^^^
  |                |
  |                unresolved import
  |                help: a similar path exists: `nyash_rust::interpreter`

error[E0432]: unresolved import `crate::box_trait`
 --> tests/array_state_sharing_test.rs:5:16
  |
5 |     use crate::box_trait::{NyashBox, IntegerBox, StringBox};
  |                ^^^^^^^^^
  |                |
  |                unresolved import
  |                help: a similar path exists: `nyash_rust::box_trait`

Some errors have detailed explanations: E0432, E0433.
For more information about an error, try `rustc --explain E0432`.
error: could not compile `nyash-rust` (test "array_state_sharing_test") due to 3 previous errors
error: could not compile `nyash-rust` (test "mir_phase8_5_hierarchical_25_instructions") due to 1 previous error
error[E0432]: unresolved import `eframe`
 --> examples/simple_notepad_win.rs:4:5
  |
4 | use eframe::egui;
  |     ^^^^^^ use of unresolved module or unlinked crate `eframe`
  |
  = help: if you wanted to use a crate named `eframe`, use `cargo add eframe` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `eframe`
 --> examples/simple_notepad_win.rs:6:14
  |
6 | fn main() -> eframe::Result {
  |              ^^^^^^ use of unresolved module or unlinked crate `eframe`
  |
  = help: if you wanted to use a crate named `eframe`, use `cargo add eframe` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `eframe`
 --> examples/simple_notepad_win.rs:7:19
  |
7 |     let options = eframe::NativeOptions {
  |                   ^^^^^^ use of unresolved module or unlinked crate `eframe`
  |
  = help: if you wanted to use a crate named `eframe`, use `cargo add eframe` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `eframe`
  --> examples/simple_notepad_win.rs:14:5
   |
14 |     eframe::run_native(
   |     ^^^^^^ use of unresolved module or unlinked crate `eframe`
   |
   = help: if you wanted to use a crate named `eframe`, use `cargo add eframe` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `eframe`
  --> examples/simple_notepad_win.rs:69:6
   |
69 | impl eframe::App for NyashNotepad {
   |      ^^^^^^ use of unresolved module or unlinked crate `eframe`
   |
   = help: if you wanted to use a crate named `eframe`, use `cargo add eframe` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `eframe`
  --> examples/simple_notepad_win.rs:70:60
   |
70 |     fn update(&mut self, ctx: &egui::Context, _frame: &mut eframe::Frame) {
   |                                                            ^^^^^^ use of unresolved module or unlinked crate `eframe`
   |
   = help: if you wanted to use a crate named `eframe`, use `cargo add eframe` to add it to your `Cargo.toml`

error: could not compile `nyash-rust` (example "simple_notepad_win") due to 7 previous errors
error[E0599]: no method named `to_string_box` found for struct `box_trait::StringBox` in the current scope
   --> src/main.rs:77:31
    |
77  |         assert_eq!(string_box.to_string_box().value, "test");
    |                               ^^^^^^^^^^^^^
    |
   ::: src/box_trait.rs:96:8
    |
96  |     fn to_string_box(&self) -> StringBox;
    |        ------------- the method is available for `box_trait::StringBox` here
...
127 | pub struct StringBox {
    | -------------------- method `to_string_box` not found for this struct
    |
    = help: items from traits can only be used if the trait is in scope
help: trait `NyashBox` which provides `to_string_box` is implemented but not in scope; perhaps you want to import it
    |
70  +     use crate::box_trait::NyashBox;
    |
help: there is a method `to_string` with a similar name
    |
77  -         assert_eq!(string_box.to_string_box().value, "test");
77  +         assert_eq!(string_box.to_string().value, "test");
    |

For more information about this error, try `rustc --explain E0599`.
error: could not compile `nyash-rust` (bin "nyash" test) due to 1 previous error
