warning: file `/mnt/c/git/nyash-project/nyash/examples/simple_notepad.rs` found to be present in multiple build targets:
  * `bin` target `simple_notepad`
  * `example` target `simple_notepad`
warning: file `/mnt/c/git/nyash-project/nyash/examples/nyash_explorer_with_icons.rs` found to be present in multiple build targets:
  * `bin` target `nyash_explorer_icons`
  * `example` target `nyash_explorer_with_icons`
warning: file `/mnt/c/git/nyash-project/nyash/examples/nyash_notepad_jp.rs` found to be present in multiple build targets:
  * `bin` target `nyash_notepad_jp`
  * `example` target `nyash_notepad_jp`
warning: file `/mnt/c/git/nyash-project/nyash/examples/simple_notepad_v2.rs` found to be present in multiple build targets:
  * `bin` target `nyash_notepad`
  * `example` target `simple_notepad_v2`
warning: file `/mnt/c/git/nyash-project/nyash/examples/simple_notepad_ascii.rs` found to be present in multiple build targets:
  * `bin` target `nyash_notepad_ascii`
  * `example` target `simple_notepad_ascii`
warning: file `/mnt/c/git/nyash-project/nyash/examples/test_icon_extraction.rs` found to be present in multiple build targets:
  * `bin` target `test_icon_extraction`
  * `example` target `test_icon_extraction`
warning: file `/mnt/c/git/nyash-project/nyash/examples/nyash_explorer.rs` found to be present in multiple build targets:
  * `bin` target `nyash_explorer`
  * `example` target `nyash_explorer`
warning: file `/mnt/c/git/nyash-project/nyash/examples/debug_notepad.rs` found to be present in multiple build targets:
  * `bin` target `debug_notepad`
  * `example` target `debug_notepad`
    Checking nyash-rust v0.1.0 (/mnt/c/git/nyash-project/nyash)
warning: unused import: `Display`
  --> src/boxes/buffer/mod.rs:35:23
   |
35 | use std::fmt::{Debug, Display};
   |                       ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::future::Future`
 --> src/boxes/future/mod.rs:7:5
  |
7 | use std::future::Future;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::pin::Pin`
 --> src/boxes/future/mod.rs:8:5
  |
8 | use std::pin::Pin;
  |     ^^^^^^^^^^^^^

warning: unused import: `crate::boxes::map_box::MapBox`
 --> src/boxes/http/mod.rs:9:5
  |
9 | use crate::boxes::map_box::MapBox;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Arc` and `Mutex`
  --> src/boxes/http/mod.rs:11:17
   |
11 | use std::sync::{Arc, Mutex};
   |                 ^^^  ^^^^^

warning: unused import: `Mutex`
 --> src/boxes/regex/mod.rs:9:22
  |
9 | use std::sync::{Arc, Mutex};
  |                      ^^^^^

warning: unused macro definition: `debug_fuel`
  --> src/parser/expressions.rs:38:14
   |
38 | macro_rules! debug_fuel {
   |              ^^^^^^^^^^
   |
   = note: `#[warn(unused_macros)]` on by default

warning: unused macro definition: `debug_fuel`
  --> src/parser/mod.rs:51:14
   |
51 | macro_rules! debug_fuel {
   |              ^^^^^^^^^^

warning: unused imports: `AddBox`, `DivideBox`, `MultiplyBox`, and `SubtractBox`
  --> src/interpreter/mod.rs:10:75
   |
10 | use crate::box_trait::{NyashBox, StringBox, IntegerBox, BoolBox, VoidBox, AddBox, SubtractBox, MultiplyBox, DivideBox, CompareBox, ArrayB...
   |                                                                           ^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> src/interpreter/objects.rs:13:5
   |
13 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `StringBox`
  --> src/interpreter/methods/collection_methods.rs:11:24
   |
11 | use crate::box_trait::{StringBox, IntegerBox, NyashBox, BoolBox};
   |                        ^^^^^^^^^

warning: unused imports: `IntegerBox` and `StringBox`
  --> src/interpreter/methods/data_methods.rs:11:34
   |
11 | use crate::box_trait::{NyashBox, StringBox, IntegerBox};
   |                                  ^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `StringBox`
  --> src/interpreter/methods/network_methods.rs:10:34
   |
10 | use crate::box_trait::{NyashBox, StringBox};
   |                                  ^^^^^^^^^

warning: unused import: `basic_methods::*`
  --> src/interpreter/methods/mod.rs:27:9
   |
27 | pub use basic_methods::*;
   |         ^^^^^^^^^^^^^^^^

warning: unused import: `collection_methods::*`
  --> src/interpreter/methods/mod.rs:28:9
   |
28 | pub use collection_methods::*;
   |         ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `io_methods::*`
  --> src/interpreter/methods/mod.rs:29:9
   |
29 | pub use io_methods::*;
   |         ^^^^^^^^^^^^^

warning: unused import: `data_methods::*`
  --> src/interpreter/methods/mod.rs:30:9
   |
30 | pub use data_methods::*;
   |         ^^^^^^^^^^^^^^^

warning: unused import: `network_methods::*`
  --> src/interpreter/methods/mod.rs:31:9
   |
31 | pub use network_methods::*;
   |         ^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> src/operator_traits.rs:16:5
   |
16 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

error[E0592]: duplicate definitions with name `execute_parent_constructor`
   --> src/interpreter/expressions.rs:816:5
    |
816 | /     fn execute_parent_constructor(&mut self, parent: &str, parent_box_decl: &super::BoxDeclaration, 
817 | |                                  current_instance: Box<dyn NyashBox>, arguments: &[ASTNode])
818 | |         -> Result<Box<dyn NyashBox>, RuntimeError> {
    | |__________________________________________________^ duplicate definitions for `execute_parent_constructor`
    |
   ::: src/interpreter/objects.rs:789:5
    |
789 | /     pub(super) fn execute_parent_constructor(&mut self, parent_class: &str, arguments: &[ASTNode]) 
790 | |         -> Result<Box<dyn NyashBox>, RuntimeError> {
    | |__________________________________________________- other definition for `execute_parent_constructor`

error[E0308]: mismatched types
   --> src/interpreter/expressions.rs:732:77
    |
732 |         let is_valid_delegation = current_box_decl.extends.as_ref() == Some(parent) || 
    |                                                                        ---- ^^^^^^ expected `&String`, found `&str`
    |                                                                        |
    |                                                                        arguments to this enum variant are incorrect
    |
    = note: expected reference `&std::string::String`
               found reference `&str`
help: the type constructed contains `&str` due to the type of the argument passed
   --> src/interpreter/expressions.rs:732:72
    |
732 |         let is_valid_delegation = current_box_decl.extends.as_ref() == Some(parent) || 
    |                                                                        ^^^^^------^
    |                                                                             |
    |                                                                             this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/6b00bc3880198600130e1cf62b8f8a93494488cc/library/core/src/option.rs:597:5

error[E0034]: multiple applicable items in scope
   --> src/interpreter/expressions.rs:753:25
    |
753 |             return self.execute_parent_constructor(parent, &parent_box_decl, current_instance_val.clone_box(), arguments);
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ multiple `execute_parent_constructor` found
    |
note: candidate #1 is defined in an impl for the type `core::NyashInterpreter`
   --> src/interpreter/expressions.rs:816:5
    |
816 | /     fn execute_parent_constructor(&mut self, parent: &str, parent_box_decl: &super::BoxDeclaration, 
817 | |                                  current_instance: Box<dyn NyashBox>, arguments: &[ASTNode])
818 | |         -> Result<Box<dyn NyashBox>, RuntimeError> {
    | |__________________________________________________^
note: candidate #2 is defined in an impl for the type `core::NyashInterpreter`
   --> src/interpreter/objects.rs:789:5
    |
789 | /     pub(super) fn execute_parent_constructor(&mut self, parent_class: &str, arguments: &[ASTNode]) 
790 | |         -> Result<Box<dyn NyashBox>, RuntimeError> {
    | |__________________________________________________^

warning: unused import: `Write`
  --> src/boxes/stream/mod.rs:10:21
   |
10 | use std::io::{Read, Write, Result};
   |                     ^^^^^

warning: unused import: `Read`
  --> src/boxes/stream/mod.rs:10:15
   |
10 | use std::io::{Read, Write, Result};
   |               ^^^^

warning: unused variable: `url`
  --> src/boxes/http/mod.rs:29:28
   |
29 |     pub fn http_get(&self, url: Box<dyn NyashBox>) -> Box<dyn NyashBox> {
   |                            ^^^ help: if this is intentional, prefix it with an underscore: `_url`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `url`
  --> src/boxes/http/mod.rs:34:24
   |
34 |     pub fn post(&self, url: Box<dyn NyashBox>, body: Box<dyn NyashBox>) -> Box<dyn NyashBox> {
   |                        ^^^ help: if this is intentional, prefix it with an underscore: `_url`

warning: unused variable: `body`
  --> src/boxes/http/mod.rs:34:48
   |
34 |     pub fn post(&self, url: Box<dyn NyashBox>, body: Box<dyn NyashBox>) -> Box<dyn NyashBox> {
   |                                                ^^^^ help: if this is intentional, prefix it with an underscore: `_body`

warning: unused variable: `url`
  --> src/boxes/http/mod.rs:39:23
   |
39 |     pub fn put(&self, url: Box<dyn NyashBox>, body: Box<dyn NyashBox>) -> Box<dyn NyashBox> {
   |                       ^^^ help: if this is intentional, prefix it with an underscore: `_url`

warning: unused variable: `body`
  --> src/boxes/http/mod.rs:39:47
   |
39 |     pub fn put(&self, url: Box<dyn NyashBox>, body: Box<dyn NyashBox>) -> Box<dyn NyashBox> {
   |                                               ^^^^ help: if this is intentional, prefix it with an underscore: `_body`

warning: unused variable: `url`
  --> src/boxes/http/mod.rs:44:26
   |
44 |     pub fn delete(&self, url: Box<dyn NyashBox>) -> Box<dyn NyashBox> {
   |                          ^^^ help: if this is intentional, prefix it with an underscore: `_url`

warning: unused variable: `method`
  --> src/boxes/http/mod.rs:49:27
   |
49 |     pub fn request(&self, method: Box<dyn NyashBox>, url: Box<dyn NyashBox>, options: Box<dyn NyashBox>) -> Box<dyn NyashBox> {
   |                           ^^^^^^ help: if this is intentional, prefix it with an underscore: `_method`

warning: unused variable: `url`
  --> src/boxes/http/mod.rs:49:54
   |
49 |     pub fn request(&self, method: Box<dyn NyashBox>, url: Box<dyn NyashBox>, options: Box<dyn NyashBox>) -> Box<dyn NyashBox> {
   |                                                      ^^^ help: if this is intentional, prefix it with an underscore: `_url`

warning: unused variable: `options`
  --> src/boxes/http/mod.rs:49:78
   |
49 |     pub fn request(&self, method: Box<dyn NyashBox>, url: Box<dyn NyashBox>, options: Box<dyn NyashBox>) -> Box<dyn NyashBox> {
   |                                                                              ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_options`

warning: variable `arg_count` is assigned to, but never used
   --> src/parser/expressions.rs:246:33
    |
246 |                         let mut arg_count = 0;
    |                                 ^^^^^^^^^
    |
    = note: consider using `_arg_count` instead

warning: unused variable: `name`
  --> src/parser/statements.rs:65:35
   |
65 |             TokenType::IDENTIFIER(name) => {
   |                                   ^^^^ help: if this is intentional, prefix it with an underscore: `_name`

warning: variable `statement_count` is assigned to, but never used
   --> src/parser/mod.rs:132:17
    |
132 |         let mut statement_count = 0;
    |                 ^^^^^^^^^^^^^^^
    |
    = note: consider using `_statement_count` instead

warning: unused variable: `i`
   --> src/interpreter/expressions.rs:537:22
    |
537 |                 for (i, arg) in arguments.iter().enumerate() {
    |                      ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: variable `result` is assigned to, but never used
   --> src/interpreter/expressions.rs:862:21
    |
862 |             let mut result: Box<dyn NyashBox> = Box::new(VoidBox::new());
    |                     ^^^^^^
    |
    = note: consider using `_result` instead

warning: value assigned to `result` is never read
   --> src/interpreter/expressions.rs:864:17
    |
864 |                 result = self.execute_statement(statement)?;
    |                 ^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: value assigned to `result` is never read
   --> src/interpreter/expressions.rs:868:21
    |
868 |                     result = return_val.clone_box();
    |                     ^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: unused variable: `existing_method`
  --> src/instance.rs:95:21
   |
95 |         if let Some(existing_method) = new_methods.get(&method_name) {
   |                     ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_existing_method`

Some errors have detailed explanations: E0034, E0308, E0592.
For more information about an error, try `rustc --explain E0034`.
warning: `nyash-rust` (lib) generated 38 warnings
error: could not compile `nyash-rust` (lib) due to 3 previous errors; 38 warnings emitted
